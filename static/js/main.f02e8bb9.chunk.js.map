{"version":3,"sources":["components/shared/Socials.tsx","components/Header.tsx","features/crypto/state/favoriteCryptoAtom.ts","utils/index.ts","components/shared/Percent.tsx","features/crypto/config/index.ts","features/crypto/hooks/index.tsx","components/Favorites.tsx","components/shared/PageMeta.tsx","components/shared/PageHeading.tsx","views/Home.tsx","components/shared/Breadcrumbs.tsx","views/Experience.tsx","views/Projects.tsx","views/Contact.tsx","features/covid19/hooks/index.tsx","features/covid19/config/index.ts","components/shared/TableHeadingSort.tsx","features/covid19/components/CovidList.tsx","features/covid19/components/CovidDetail.tsx","features/covid19/views/Covid19.tsx","features/crypto/components/CryptoList.tsx","features/crypto/components/CryptoDetail.tsx","features/crypto/views/Crypto.tsx","features/movies/state/moviesAtom.ts","features/movies/components/MoviesHeading.tsx","features/movies/config/index.ts","features/movies/hooks/index.tsx","features/movies/utils/index.ts","features/movies/components/MoviesCard.tsx","features/movies/components/MoviesList.tsx","features/movies/components/MoviesSearch.tsx","features/movies/components/MoviesTrailer.tsx","features/movies/components/MovieDetail.tsx","features/movies/components/TvDetail.tsx","features/movies/components/MoviesDetail.tsx","features/movies/views/Movies.tsx","App.tsx","reportWebVitals.ts","index.tsx","features/movies/enums/index.ts","enums/index.ts","config/index.ts","config/nav.ts","config/skillset.ts","config/experience.ts","config/projects.ts","routes/index.ts","features/movies/routes/index.ts","features/crypto/enums/index.ts","features/covid19/routes/index.ts","features/crypto/routes/index.ts","features/covid19/enums/index.ts"],"names":["Socials","variant","color","config","socials","github","linkedin","rootClassName","classNames","linkClassName","className","href","decode","target","rel","size","Header","brand","nav","pathname","useLocation","Navbar","bg","expand","Container","Brand","to","as","Link","Toggle","aria-controls","Collapse","id","Nav","map","title","url","children","NavDropdown","active","includes","Item","persistAtom","recoilPersist","favoriteCryptoAtom","atom","key","default","effects_UNSTABLE","fetcher","a","fetch","res","ok","Error","json","removeProtocolFromUrl","replace","formatPrice","price","locale","currency","Intl","NumberFormat","style","maximumFractionDigits","format","formatNumber","number","arrSortAscByKey","arr","sort","b","_get","arrSortDescByKey","arrSortStringAscByKey","localeCompare","arrSortStringDescByKey","Percent","amount","toFixed","pctClassName","endpoint","charts","timeframes","limit","aggregate","useCryptoList","useState","cryptoList","setCryptoList","responseError","setResponseError","useSWR","revalidateOnFocus","data","error","useEffect","Message","Data","CryptoApiStatusEnum","Success","useCryptoDetailData","code","cryptoListError","cryptoDetailData","find","item","CoinInfo","Name","name","FullName","image","ImageUrl","RAW","USD","PRICE","changePct24h","CHANGEPCT24HOUR","FavoriteCryptoData","Favorites","useRecoilState","favoriteCrypto","setFavoriteCrypto","loading","alt","src","width","role","onClick","PageMeta","description","Helmet","content","PageHeading","Home","navigate","useNavigate","skillset","PageTitle","Row","Col","lg","Button","BaseRouteDictionary","Experience","Projects","items","md","Card","height","Body","Title","Text","Breadcrumbs","crumbs","Breadcrumb","experience","Accordion","defaultActiveKey","i","company","website","date","projects","eventKey","Badge","length","project","stack","ContactDetails","lazy","Contact","contact","setContact","contactInfo","fallback","Spinner","animation","TableHeadingSort","onAsc","onDesc","iconSize","CovidList","covidList","setCovidList","useCovidList","search","setSearch","Covid19Title","Base","Alert","Form","Control","type","placeholder","onChange","e","value","Table","responsive","striped","bordered","hover","sortByString","filter","country","toLowerCase","todayCases","cases","todayDeaths","deaths","flag","countryInfo","CovidDetail","covidDetail","setCovidDetail","useCovidDetail","countryName","population","recovered","todayRecovered","critical","baseTitle","Covid19RouteDictionary","Index","options","labels","colors","tooltip","y","formatter","val","series","Covid19","useParams","CryptoList","CryptoTitle","iconColor","marketCap","MKTCAP","isFavorite","CryptoDetail","cryptoCode","toUpperCase","undefined","cryptoHistory","setCryptoHistory","timeframe","setTimeframe","chartSeries","setChartSeries","Response","x","time","open","high","low","close","useCryptoHistory","CryptoRouteDictionary","ButtonGroup","aria-label","chart","animations","enabled","toolbar","tools","zoom","zoomin","zoomout","selection","pan","reset","text","align","xaxis","yaxis","Crypto","moviesAtom","MoviesHeading","paddingRight","Image","top","right","apiKey","getMovieImg","posterPath","MoviesCard","Img","MoviesList","query","MoviesType","Movie","results","useMoviesList","moviesList","moviesListError","Tv","useTvList","showsList","showsListError","movieRoute","MoviesRouteDictionary","tvRoute","Tabs","Tab","poster_path","original_title","release_date","original_name","first_air_date","MoviesSearch","movies","setMovies","moviesSearch","MoviesTitle","MoviesTrailer","trailer","site","official","useMoviesTrailer","allow","allowFullScreen","MovieDetail","useMoviesDetail","movie","overview","runtime","genres","production_companies","budget","revenue","fluid","rounded","TvDetail","useTvDetail","tv","number_of_episodes","MoviesDetail","Movies","App","path","element","Detail","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","email","phone","Features"],"mappings":"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","file":"static/js/main.f02e8bb9.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { Github, Linkedin } from 'react-bootstrap-icons';\nimport classNames from 'classnames';\nimport { decode } from 'html-entities';\nimport config from '../../config';\n\ninterface SocialsProps {\n  variant?: 'headerSm' | 'headerLg' | 'content';\n  color: string;\n}\n\nconst Socials: FC<SocialsProps> = ({ variant, color }) => {\n  const {\n    socials: { github, linkedin },\n  } = config;\n  const rootClassName = classNames({\n    'd-lg-none my-2': variant === 'headerSm',\n    'ml-auto d-none d-lg-block': variant === 'headerLg',\n  });\n  const linkClassName = classNames({\n    'me-4': variant === 'headerSm' || variant === 'content',\n    'ms-4': variant === 'headerLg',\n  });\n\n  return (\n    <div className={rootClassName}>\n      <a className={linkClassName} href={decode(github)} target=\"_blank\" rel=\"noreferrer\">\n        <Github color={color} size={24} />\n      </a>\n      <a className={linkClassName} href={decode(linkedin)} target=\"_blank\" rel=\"noreferrer\">\n        <Linkedin color={color} size={24} />\n      </a>\n    </div>\n  );\n};\n\nexport default Socials;\n","import { FC, Fragment } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\nimport Socials from './shared/Socials';\nimport config from '../config';\n\nconst Header: FC = () => {\n  const { brand, nav } = config;\n  const { pathname } = useLocation();\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Container>\n        <Navbar.Brand to=\"/\" as={Link}>\n          {brand}\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"navbar-nav\" />\n        <Navbar.Collapse id=\"navbar-nav\">\n          <Nav>\n            {nav.map(({ title, url, children }) => (\n              <Fragment key={title}>\n                {!children ? (\n                  <Nav.Link to={url} as={Link} active={pathname === url}>\n                    {title}\n                  </Nav.Link>\n                ) : (\n                  <NavDropdown title={title} id=\"nav-dropdown\" active={pathname.includes(url)}>\n                    {children.map(({ title, url }) => (\n                      <NavDropdown.Item key={title} to={url} as={Link} active={pathname === url}>\n                        {title}\n                      </NavDropdown.Item>\n                    ))}\n                  </NavDropdown>\n                )}\n              </Fragment>\n            ))}\n          </Nav>\n          <Socials variant=\"headerSm\" color=\"white\" />\n        </Navbar.Collapse>\n        <Socials variant=\"headerLg\" color=\"white\" />\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import { atom } from 'recoil';\nimport { recoilPersist } from 'recoil-persist';\n\nconst { persistAtom } = recoilPersist();\n\ninterface FavoriteCryptoAtom {\n  code: string;\n  image: string;\n}\n\nconst favoriteCryptoAtom = atom<FavoriteCryptoAtom | null>({\n  key: 'favoriteCrypto',\n  default: null,\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport default favoriteCryptoAtom;\n","import { get as _get } from 'lodash';\n\nexport const fetcher = async (url: string) => {\n  const res = await fetch(url);\n\n  if (!res.ok) throw new Error('An error occurred while fetching the data.');\n\n  return res.json();\n};\n\nexport const removeProtocolFromUrl = (url: string) => url.replace(/(^\\w+:|^)\\/\\//, '');\n\nexport const formatPrice = (price: number, locale = 'en', currency = 'USD'): string =>\n  new Intl.NumberFormat(locale, { style: 'currency', currency, maximumFractionDigits: 4 }).format(price);\n\nexport const formatNumber = (number: number, locale = 'en'): string => new Intl.NumberFormat(locale).format(number);\n\nexport const arrSortAscByKey = (arr: any[], key: string) => arr.sort((a, b) => _get(b, key) - _get(a, key));\n\nexport const arrSortDescByKey = (arr: any[], key: string) => arr.sort((a, b) => _get(a, key) - _get(b, key));\n\nexport const arrSortStringAscByKey = (arr: any[], key: string) =>\n  arr.sort((a, b) => _get(a, key).localeCompare(_get(b, key)));\n\nexport const arrSortStringDescByKey = (arr: any[], key: string) =>\n  arr.sort((a, b) => _get(b, key).localeCompare(_get(a, key)));\n","import { FC } from 'react';\nimport classNames from 'classnames';\n\ninterface PageHeadingProps {\n  amount: number;\n  toFixed?: number;\n}\n\nconst Percent: FC<PageHeadingProps> = ({ amount, toFixed = 2 }) => {\n  const pctClassName = classNames({\n    'text-danger': amount < 0,\n    'text-success': amount > 0,\n  });\n\n  return <span className={pctClassName}>{amount.toFixed(toFixed)}%</span>;\n};\n\nexport default Percent;\n","const config = {\n  endpoint: 'https://min-api.cryptocompare.com/data',\n  charts: {\n    timeframes: [\n      {\n        title: '1 Month',\n        limit: 30,\n        aggregate: 1,\n      },\n      {\n        title: '1 Year',\n        limit: 30 * 12,\n        aggregate: 1,\n      },\n      {\n        title: '3 Years',\n        limit: 30 * (12 * 3),\n        aggregate: 1,\n      },\n      {\n        title: '5 Years',\n        limit: 30 * (12 * 5),\n        aggregate: 1,\n      },\n    ],\n  },\n};\n\nexport default config;\n","import { useEffect, useState, Dispatch, SetStateAction } from 'react';\nimport useSWR from 'swr';\nimport { CryptoApiStatusEnum } from '../enums';\nimport { CryptoListDataModel, CryptoListModel, CryptoHistoryDataModel, CryptoHistoryModel } from '../models';\nimport { fetcher } from '../../../utils';\nimport config from '../config';\n\nconst {\n  endpoint,\n  charts: { timeframes },\n} = config;\n\n// TODO: change when swr properly types error response\ntype Error = any;\n\nexport const useCryptoList = (): [\n  CryptoListDataModel[] | undefined,\n  Dispatch<SetStateAction<CryptoListDataModel[] | undefined>>,\n  Error,\n] => {\n  const [cryptoList, setCryptoList] = useState<CryptoListDataModel[] | undefined>();\n  const [responseError, setResponseError] = useState(false);\n  const { data, error } = useSWR<CryptoListModel>(`${endpoint}/top/mktcapfull?limit=100&tsym=USD`, fetcher, {\n    revalidateOnFocus: false,\n  });\n\n  useEffect(() => {\n    if (data) {\n      const { Message, Data } = data;\n      Message === CryptoApiStatusEnum.Success ? setCryptoList(Data) : setResponseError(true);\n    }\n  }, [data]);\n\n  return [cryptoList, setCryptoList, error || responseError];\n};\n\ntype Timeframe = {\n  title: string;\n  limit: number;\n  aggregate: number;\n};\n\ntype ChartSeries = any[] | undefined;\n\ntype CryptoHistory = CryptoHistoryDataModel[] | undefined;\n\nexport const useCryptoHistory = (\n  cryptoCode: string,\n): [CryptoHistory, ChartSeries, Timeframe, Dispatch<SetStateAction<Timeframe>>, Error] => {\n  const [cryptoHistory, setCryptoHistory] = useState<CryptoHistory>(undefined);\n  const [timeframe, setTimeframe] = useState<Timeframe>(timeframes[0]);\n  const [chartSeries, setChartSeries] = useState<ChartSeries>();\n  const [responseError, setResponseError] = useState(false);\n  const { data, error } = useSWR<CryptoHistoryModel>(\n    `${endpoint}/histoday?fsym=${cryptoCode}&tsym=USD&limit=${timeframe.limit}&aggregate=${timeframe.aggregate}&allData=false`,\n    fetcher,\n  );\n\n  useEffect(() => {\n    if (data) {\n      const { Response, Data } = data;\n\n      if (Response === CryptoApiStatusEnum.Success) {\n        setCryptoHistory(Data);\n        setChartSeries([\n          {\n            data: Data.map(({ time, open, high, low, close }) => {\n              return {\n                x: time * 1000,\n                y: [open, high, low, close],\n              };\n            }),\n          },\n        ]);\n        return;\n      }\n\n      setResponseError(true);\n    }\n  }, [data]);\n\n  return [cryptoHistory, chartSeries, timeframe, setTimeframe, error || responseError];\n};\n\ninterface CryptoDetail {\n  code: string;\n  name: string;\n  image: string;\n  price: number;\n  changePct24h: number;\n}\n\nexport const useCryptoDetailData = (code: string): CryptoDetail | null => {\n  const [cryptoList, , cryptoListError] = useCryptoList();\n  const cryptoDetailData = cryptoList?.find((item) => item.CoinInfo.Name === code);\n\n  if (!cryptoList || cryptoListError || !cryptoDetailData) return null;\n\n  const {\n    CoinInfo: { FullName: name, ImageUrl: image },\n    RAW: {\n      USD: { PRICE: price, CHANGEPCT24HOUR: changePct24h },\n    },\n  } = cryptoDetailData;\n\n  return { code, name, image, price, changePct24h };\n};\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useRecoilState } from 'recoil';\nimport { Container } from 'react-bootstrap';\nimport { X } from 'react-bootstrap-icons';\nimport favoriteCryptoAtom from '../features/crypto/state/favoriteCryptoAtom';\nimport { formatPrice } from '../utils';\nimport Percent from './shared/Percent';\nimport { useCryptoDetailData } from '../features/crypto/hooks';\n\ninterface FavoriteCryptoDataProps {\n  code: string;\n}\n\nconst FavoriteCryptoData: FC<FavoriteCryptoDataProps> = ({ code }) => {\n  const cryptoDetailData = useCryptoDetailData(code);\n\n  if (!cryptoDetailData) return null;\n\n  const { price, changePct24h } = cryptoDetailData;\n\n  return (\n    <>\n      <span className=\"mx-2\">{formatPrice(price)}</span>\n      <Percent amount={changePct24h} />\n    </>\n  );\n};\n\nconst Favorites: FC = () => {\n  const [favoriteCrypto, setFavoriteCrypto] = useRecoilState(favoriteCryptoAtom);\n\n  if (!favoriteCrypto) return null;\n\n  const { code, image } = favoriteCrypto;\n\n  return (\n    <div className=\"bg-white border-bottom\">\n      <Container className=\"py-2\">\n        <div className=\"d-flex align-items-center\">\n          <img\n            loading=\"lazy\"\n            alt={code}\n            src={`https://www.cryptocompare.com/${image}`}\n            style={{ width: '1rem' }}\n            className=\"me-2\"\n          />\n          <Link to={`features/crypto/${code}`}>\n            <strong>{code}</strong>\n          </Link>\n          <FavoriteCryptoData code={code} />\n          <span\n            className=\"ms-1 d-flex\"\n            role=\"button\"\n            onClick={() => setFavoriteCrypto(null)}\n            title=\"Remove from Favorites\"\n          >\n            <X size={20} color=\"var(--bs-red)\" />\n          </span>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default Favorites;\n","import { FC } from 'react';\nimport { Helmet } from 'react-helmet';\nimport config from '../../config';\n\ninterface PageMetaProps {\n  title?: string;\n  description?: string;\n}\n\nconst PageMeta: FC<PageMetaProps> = ({ title, description }) => (\n  <Helmet>\n    {title && (\n      <title>\n        {title} | {config.brand}\n      </title>\n    )}\n    {description && <meta name=\"description\" content={description} />}\n  </Helmet>\n);\n\nexport default PageMeta;\n","import { FC } from 'react';\n\ninterface PageHeadingProps {\n  title: string;\n}\n\nconst PageHeading: FC<PageHeadingProps> = ({ title }) => <h1 className=\"display-5 fw-bold my-5\">{title}</h1>;\n\nexport default PageHeading;\n","import { FC } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Row, Col, Button, Card } from 'react-bootstrap';\nimport BaseRouteDictionary from '../routes';\nimport { PageTitle } from '../enums';\nimport config from '../config';\nimport PageMeta from '../components/shared/PageMeta';\nimport PageHeading from '../components/shared/PageHeading';\n\nconst Home: FC = () => {\n  const navigate = useNavigate();\n  const { skillset } = config;\n\n  return (\n    <>\n      <PageMeta title={PageTitle.Home} />\n      <Row className=\"my-5\">\n        <Col lg={6} className=\"mx-auto text-center\">\n          <PageHeading title=\"React Frontend Developer\" />\n          <p className=\"lead mb-3\">\n            Senior Frontend Web &amp; Mobile developer with a strong focus on performance optimisation, clean code and\n            passion to UX.\n          </p>\n          <Button size=\"lg\" variant=\"primary\" className=\"m-2\" onClick={() => navigate(BaseRouteDictionary.Experience)}>\n            {PageTitle.Experience}\n          </Button>\n          <Button\n            size=\"lg\"\n            variant=\"outline-secondary\"\n            className=\"m-2\"\n            onClick={() => navigate(BaseRouteDictionary.Projects)}\n          >\n            {PageTitle.Projects}\n          </Button>\n        </Col>\n      </Row>\n      <h2>Skillset</h2>\n      <Row>\n        {skillset.map(({ title, items }) => (\n          <Col key={title} md={6} lg={4} className=\"mt-4\">\n            <Card style={{ height: '100%' }}>\n              <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <Card.Text as=\"div\">\n                  <ul>\n                    {items.map((item) => (\n                      <li key={item}>{item}</li>\n                    ))}\n                  </ul>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Home;\n","import { FC, Fragment } from 'react';\nimport { Breadcrumb } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { PageTitle } from '../../enums';\n\ninterface BreadcrumbsProps {\n  crumbs: { title: string; url?: string }[];\n  className?: string;\n}\n\nconst Breadcrumbs: FC<BreadcrumbsProps> = ({ crumbs, className = 'my-3' }) => (\n  <Breadcrumb className={className}>\n    <LinkContainer to=\"/\">\n      <Breadcrumb.Item>{PageTitle.Home}</Breadcrumb.Item>\n    </LinkContainer>\n    {crumbs.map(({ title, url }) => (\n      <Fragment key={title}>\n        {url ? (\n          <LinkContainer to={url}>\n            <Breadcrumb.Item>{title}</Breadcrumb.Item>\n          </LinkContainer>\n        ) : (\n          <Breadcrumb.Item active>{title}</Breadcrumb.Item>\n        )}\n      </Fragment>\n    ))}\n  </Breadcrumb>\n);\n\nexport default Breadcrumbs;\n","import { FC } from 'react';\nimport { Accordion, Badge, Button } from 'react-bootstrap';\nimport { PageTitle } from '../enums';\nimport { removeProtocolFromUrl } from '../utils';\nimport config from '../config';\nimport PageMeta from '../components/shared/PageMeta';\nimport Breadcrumbs from '../components/shared/Breadcrumbs';\nimport PageHeading from '../components/shared/PageHeading';\n\nconst Experience: FC = () => {\n  const { experience } = config;\n  const title = PageTitle.Experience;\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <Breadcrumbs crumbs={[{ title }]} />\n      <PageHeading title={title} />\n      <Accordion defaultActiveKey=\"0\">\n        {experience.map(({ company, website, role, date, description, projects }, i) => (\n          <Accordion.Item eventKey={`${i}`} key={date}>\n            <Accordion.Header>{role}</Accordion.Header>\n            <Accordion.Body>\n              <Badge bg=\"secondary\">{date}</Badge>\n              <h2 className=\"display-8 mt-2\">{company}</h2>\n              {website && (\n                <Button href={website} size=\"sm\" variant=\"outline-primary\" target=\"_blank\">\n                  {removeProtocolFromUrl(website)}\n                </Button>\n              )}\n              {description && <p className=\"mt-4 mb-0\">{description}</p>}\n              {projects?.length && (\n                <>\n                  <h3 className=\"fs-4 text-secondary mt-4\">Projects</h3>\n                  <ul>\n                    {projects.map((project) => (\n                      <li key={project}>{project}</li>\n                    ))}\n                  </ul>\n                </>\n              )}\n            </Accordion.Body>\n          </Accordion.Item>\n        ))}\n      </Accordion>\n    </>\n  );\n};\n\nexport default Experience;\n","import { FC } from 'react';\nimport { Row, Col, Button, Card, Badge } from 'react-bootstrap';\nimport { PageTitle } from '../enums';\nimport { removeProtocolFromUrl } from '../utils';\nimport config from '../config';\nimport PageMeta from '../components/shared/PageMeta';\nimport Breadcrumbs from '../components/shared/Breadcrumbs';\nimport PageHeading from '../components/shared/PageHeading';\n\nconst Projects: FC = () => {\n  const { projects } = config;\n  const title = PageTitle.Projects;\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <Breadcrumbs crumbs={[{ title }]} />\n      <PageHeading title={title} />\n      <Row>\n        {projects.map(({ title, description, url, stack }) => (\n          <Col key={title} md={6} lg={4} className=\"mb-4\">\n            <Card style={{ height: '100%' }}>\n              <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <Card.Text>{description}</Card.Text>\n                {url && (\n                  <Button variant=\"primary\" href={url} target=\"_blank\">\n                    {removeProtocolFromUrl(url)}\n                  </Button>\n                )}\n                {stack && (\n                  <div className=\"mt-3\">\n                    {stack.map((item) => (\n                      <Badge key={item} bg=\"secondary\" className=\"mt-2 me-2\">\n                        {item}\n                      </Badge>\n                    ))}\n                  </div>\n                )}\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Projects;\n","import { FC, useState, Suspense, lazy } from 'react';\nimport { Button, Spinner, Row, Col, Card } from 'react-bootstrap';\nimport { PageTitle } from '../enums';\nimport PageMeta from '../components/shared/PageMeta';\nimport Breadcrumbs from '../components/shared/Breadcrumbs';\nimport PageHeading from '../components/shared/PageHeading';\nimport Socials from '../components/shared/Socials';\nconst ContactDetails = lazy(() => import('../components/ContactDetails'));\n\nconst Contact: FC = () => {\n  const [contact, setContact] = useState(false);\n  const title = PageTitle.Contact;\n  const contactInfo = `${title} Information`;\n  const content = contact ? (\n    <ContactDetails />\n  ) : (\n    <Button className=\"mt-2 mb-4\" size=\"lg\" onClick={() => setContact(true)}>\n      Show {contactInfo}\n    </Button>\n  );\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <Breadcrumbs crumbs={[{ title }]} />\n      <PageHeading title={title} />\n      <Row>\n        <Col md={6}>\n          <Card>\n            <Card.Header>{contactInfo}</Card.Header>\n            <Card.Body>\n              <Suspense fallback={<Spinner animation=\"border\" />}>{content}</Suspense>\n              <Socials variant=\"content\" color=\"var(--bs-blue)\" />\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Contact;\n","import { useEffect, useState, Dispatch, SetStateAction } from 'react';\nimport useSWR from 'swr';\nimport { CountryModel } from '../models';\nimport { fetcher } from '../../../utils';\nimport config from '../config';\n\n// TODO: change when swr properly types error response\ntype Error = any;\n\nconst { endpoint } = config;\n\nexport const useCovidList = (): [\n  CountryModel[] | undefined,\n  Dispatch<SetStateAction<CountryModel[] | undefined>>,\n  Error,\n] => {\n  const [covidList, setCovidList] = useState<CountryModel[] | undefined>();\n  const { data, error } = useSWR<CountryModel[]>(`${endpoint}/covid-19/countries`, fetcher, {\n    revalidateOnFocus: false,\n  });\n\n  useEffect(() => {\n    if (data) setCovidList(data);\n  }, [data]);\n\n  return [covidList, setCovidList, error];\n};\n\nexport const useCovidDetail = (country: string): [CountryModel | undefined, Error] => {\n  const [covidDetail, setCovidDetail] = useState<CountryModel | undefined>();\n  const { data, error } = useSWR<CountryModel>(`${endpoint}/covid-19/countries/${country}`, fetcher, {\n    revalidateOnFocus: false,\n  });\n\n  useEffect(() => {\n    if (data) setCovidDetail(data);\n  }, [data]);\n\n  return [covidDetail, error];\n};\n","const config = {\n  endpoint: 'https://disease.sh/v3',\n};\n\nexport default config;\n","import { FC } from 'react';\nimport { ArrowUpShort, ArrowDownShort } from 'react-bootstrap-icons';\n\ninterface TableHeadingSortProps {\n  title: string;\n  onAsc: () => void;\n  onDesc: () => void;\n  iconSize?: number;\n}\n\nconst TableHeadingSort: FC<TableHeadingSortProps> = ({ title, onAsc, onDesc, iconSize = 16 }) => (\n  <th>\n    <div className=\"d-flex justify-content-between\">\n      {title}\n      <div>\n        <ArrowUpShort size={iconSize} role=\"button\" onClick={onAsc} />\n        <ArrowDownShort size={iconSize} role=\"button\" onClick={onDesc} />\n      </div>\n    </div>\n  </th>\n);\n\nexport default TableHeadingSort;\n","import { FC, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Alert, Spinner, Form, Table } from 'react-bootstrap';\nimport { Covid19Title } from '../enums';\nimport { useCovidList } from '../hooks';\nimport {\n  arrSortAscByKey,\n  arrSortDescByKey,\n  arrSortStringAscByKey,\n  arrSortStringDescByKey,\n  formatNumber,\n} from '../../../utils';\nimport PageMeta from '../../../components/shared/PageMeta';\nimport Breadcrumbs from '../../../components/shared/Breadcrumbs';\nimport PageHeading from '../../../components/shared/PageHeading';\nimport TableHeadingSort from '../../../components/shared/TableHeadingSort';\n\nconst CovidList: FC = () => {\n  const [covidList, setCovidList, error] = useCovidList();\n  const [search, setSearch] = useState('');\n  const title = Covid19Title.Base;\n\n  if (error)\n    return (\n      <Alert variant=\"danger\" className=\"my-5\">\n        Something went wrong\n      </Alert>\n    );\n\n  if (!covidList) return <Spinner animation=\"border\" className=\"my-5\" />;\n\n  const tableHeadings = [\n    { title: 'Country', key: 'country', sortByString: true },\n    { title: 'Cases today', key: 'todayCases' },\n    { title: 'Cases total', key: 'cases' },\n    { title: 'Deaths today', key: 'todayDeaths' },\n    { title: 'Deaths total', key: 'deaths' },\n  ];\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <Breadcrumbs crumbs={[{ title }]} />\n      <PageHeading title={title} />\n      <Form.Control\n        size=\"lg\"\n        type=\"search\"\n        placeholder=\"Search by country...\"\n        className=\"mb-4\"\n        onChange={(e) => setSearch(e.target.value)}\n      />\n      <Table responsive striped bordered hover>\n        <thead>\n          <tr>\n            {tableHeadings.map(({ title, key, sortByString }) => (\n              <TableHeadingSort\n                key={key}\n                title={title}\n                onAsc={() =>\n                  setCovidList([\n                    ...(sortByString ? arrSortStringAscByKey(covidList, key) : arrSortAscByKey(covidList, key)),\n                  ])\n                }\n                onDesc={() =>\n                  setCovidList([\n                    ...(sortByString ? arrSortStringDescByKey(covidList, key) : arrSortDescByKey(covidList, key)),\n                  ])\n                }\n              />\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {covidList\n            .filter(({ country }) => country.toLowerCase().includes(search.toLowerCase()))\n            .map(({ country, todayCases, cases, todayDeaths, deaths, countryInfo: { flag } }) => (\n              <tr key={country}>\n                <td>\n                  <img loading=\"lazy\" style={{ width: '1rem' }} alt={country} src={flag} />{' '}\n                  <Link to={country.toLowerCase()}>{country}</Link>\n                </td>\n                <td>{todayCases > 0 ? <strong>{formatNumber(todayCases)}</strong> : formatNumber(todayCases)}</td>\n                <td>{formatNumber(cases)}</td>\n                <td>\n                  {todayDeaths > 0 ? (\n                    <strong className=\"text-danger\">{formatNumber(todayDeaths)}</strong>\n                  ) : (\n                    formatNumber(todayDeaths)\n                  )}\n                </td>\n                <td>{deaths > 0 ? <strong>{formatNumber(deaths)}</strong> : formatNumber(deaths)}</td>\n              </tr>\n            ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default CovidList;\n","import { FC } from 'react';\nimport { Alert, Spinner, Row, Col, Table } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport Covid19RouteDictionary from '../routes';\nimport { Covid19Title } from '../enums';\nimport { useCovidDetail } from '../hooks';\nimport { formatNumber } from '../../../utils';\nimport PageMeta from '../../../components/shared/PageMeta';\nimport Breadcrumbs from '../../../components/shared/Breadcrumbs';\nimport PageHeading from '../../../components/shared/PageHeading';\n\ninterface CovidDetailProps {\n  country: string;\n}\n\nconst CovidDetail: FC<CovidDetailProps> = ({ country }) => {\n  const [covidDetail, error] = useCovidDetail(country);\n\n  if (error)\n    return (\n      <Alert variant=\"danger\" className=\"my-5\">\n        Something went wrong\n      </Alert>\n    );\n\n  if (!covidDetail) return <Spinner animation=\"border\" className=\"my-5\" />;\n\n  const {\n    country: countryName,\n    population,\n    cases,\n    deaths,\n    recovered,\n    todayCases,\n    todayDeaths,\n    todayRecovered,\n    critical,\n  } = covidDetail;\n  const baseTitle = Covid19Title.Base;\n  const title = `${countryName} ${baseTitle} stats`;\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <Breadcrumbs\n        className=\"my-3\"\n        crumbs={[{ title: baseTitle, url: Covid19RouteDictionary.Index }, { title: countryName }]}\n      />\n      <PageHeading title={title} />\n      <Row>\n        <Col md={6}>\n          <Table striped bordered hover responsive>\n            <tbody>\n              <tr>\n                <th>Population</th>\n                <td>{formatNumber(population)}</td>\n              </tr>\n              <tr>\n                <th>Cases total</th>\n                <td>{formatNumber(cases)}</td>\n              </tr>\n              <tr>\n                <th>Deaths total</th>\n                <td>\n                  {formatNumber(deaths)} ({((deaths / cases) * 100).toFixed(2)}%)\n                </td>\n              </tr>\n              <tr>\n                <th>Recovered total</th>\n                <td>{formatNumber(recovered)}</td>\n              </tr>\n              <tr>\n                <th>Cases today</th>\n                <td>{formatNumber(todayCases)}</td>\n              </tr>\n              <tr>\n                <th>Deaths today</th>\n                <td>{formatNumber(todayDeaths)}</td>\n              </tr>\n              <tr>\n                <th>Recovered today</th>\n                <td>{formatNumber(todayRecovered)}</td>\n              </tr>\n              <tr>\n                <th>Critical</th>\n                <td>{formatNumber(critical)}</td>\n              </tr>\n            </tbody>\n          </Table>\n        </Col>\n        <Col md={6}>\n          <Chart\n            options={{\n              labels: ['Cases', 'Deaths', 'Recovered'],\n              colors: ['var(--bs-blue)', 'var(--bs-red)', 'var(--bs-green)'],\n              tooltip: {\n                y: {\n                  formatter: (val) => formatNumber(val),\n                },\n              },\n            }}\n            series={[cases, deaths, recovered]}\n            type=\"donut\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default CovidDetail;\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CovidList from '../components/CovidList';\nimport CovidDetail from '../components/CovidDetail';\n\nconst Covid19: FC = () => {\n  const { country } = useParams();\n\n  return !country ? <CovidList /> : <CovidDetail country={country} />;\n};\n\nexport default Covid19;\n","import { FC, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useRecoilState } from 'recoil';\nimport { Alert, Spinner, Form, Table } from 'react-bootstrap';\nimport { Heart, HeartFill } from 'react-bootstrap-icons';\nimport { CryptoTitle } from '../enums';\nimport favoriteCryptoAtom from '../state/favoriteCryptoAtom';\nimport { useCryptoList } from '../hooks';\nimport {\n  arrSortAscByKey,\n  arrSortDescByKey,\n  arrSortStringAscByKey,\n  arrSortStringDescByKey,\n  formatPrice,\n} from '../../../utils';\nimport PageMeta from '../../../components/shared/PageMeta';\nimport Breadcrumbs from '../../../components/shared/Breadcrumbs';\nimport PageHeading from '../../../components/shared/PageHeading';\nimport TableHeadingSort from '../../../components/shared/TableHeadingSort';\nimport Percent from '../../../components/shared/Percent';\n\nconst CryptoList: FC = () => {\n  const [cryptoList, setCryptoList, error] = useCryptoList();\n  const [search, setSearch] = useState('');\n  const [favoriteCrypto, setFavoriteCrypto] = useRecoilState(favoriteCryptoAtom);\n  const title = CryptoTitle.Base;\n  const iconColor = 'var(--bs-red)';\n  const iconSize = 16;\n\n  if (error)\n    return (\n      <Alert variant=\"danger\" className=\"my-5\">\n        Something went wrong\n      </Alert>\n    );\n\n  if (!cryptoList) return <Spinner animation=\"border\" className=\"my-5\" />;\n\n  const tableHeadings = [\n    { title: 'Code', key: 'CoinInfo.Name', sortByString: true },\n    { title: 'Name', key: 'CoinInfo.FullName', sortByString: true },\n    { title: 'Price', key: 'RAW.USD.PRICE' },\n    { title: '24h %', key: 'RAW.USD.CHANGEPCT24HOUR' },\n    { title: 'Market Cap', key: 'RAW.USD.MKTCAP' },\n  ];\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <Breadcrumbs crumbs={[{ title }]} />\n      <PageHeading title={title} />\n      <Form.Control\n        size=\"lg\"\n        type=\"search\"\n        placeholder=\"Search by currency...\"\n        className=\"mb-4\"\n        onChange={(e) => setSearch(e.target.value)}\n      />\n      <Table responsive striped bordered hover>\n        <thead>\n          <tr>\n            {tableHeadings.map(({ title, key, sortByString }) => (\n              <TableHeadingSort\n                key={key}\n                title={title}\n                onAsc={() =>\n                  setCryptoList([\n                    ...(sortByString ? arrSortStringAscByKey(cryptoList, key) : arrSortAscByKey(cryptoList, key)),\n                  ])\n                }\n                onDesc={() =>\n                  setCryptoList([\n                    ...(sortByString ? arrSortStringDescByKey(cryptoList, key) : arrSortDescByKey(cryptoList, key)),\n                  ])\n                }\n              />\n            ))}\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {cryptoList\n            .filter(({ CoinInfo: { FullName } }) => FullName.toLowerCase().includes(search.toLowerCase()))\n            .map(({ CoinInfo: { Name: code, ImageUrl: image, FullName: name }, RAW }) => {\n              if (!RAW?.USD) return null;\n              const { MKTCAP: marketCap, PRICE: price, CHANGEPCT24HOUR: changePct24h } = RAW.USD;\n              const isFavorite = favoriteCrypto && favoriteCrypto.code === code;\n\n              return (\n                <tr key={code}>\n                  <td>\n                    <img\n                      loading=\"lazy\"\n                      alt={name}\n                      src={`https://www.cryptocompare.com/${image}`}\n                      style={{ width: '1.3rem' }}\n                      className=\"me-2\"\n                    />\n                    {code}\n                  </td>\n                  <td>\n                    <Link to={code.toLowerCase()}>{name}</Link>\n                  </td>\n                  <td>{formatPrice(price)}</td>\n                  <td>\n                    <Percent amount={changePct24h} />\n                  </td>\n                  <td>{marketCap ? formatPrice(marketCap) : '-'}</td>\n                  <td className=\"text-center\">\n                    <span\n                      title={!isFavorite ? 'Add to Favorites' : 'Remove from Favorites'}\n                      role=\"button\"\n                      onClick={() => setFavoriteCrypto(!isFavorite ? { code, image } : null)}\n                    >\n                      {isFavorite ? (\n                        <HeartFill color={iconColor} size={iconSize} />\n                      ) : (\n                        <Heart color={iconColor} size={iconSize} />\n                      )}\n                    </span>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default CryptoList;\n","import { FC } from 'react';\nimport { Alert, Spinner, ButtonGroup, Button } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport CryptoRouteDictionary from '../routes';\nimport { CryptoTitle } from '../enums';\nimport { useCryptoDetailData, useCryptoHistory } from '../hooks';\nimport { formatPrice } from '../../../utils';\nimport config from '../config';\nimport PageMeta from '../../../components/shared/PageMeta';\nimport Breadcrumbs from '../../../components/shared/Breadcrumbs';\nimport PageHeading from '../../../components/shared/PageHeading';\nimport Percent from '../../../components/shared/Percent';\n\ninterface CryptoDetailProps {\n  code: string;\n}\n\nconst CryptoDetail: FC<CryptoDetailProps> = ({ code }) => {\n  const cryptoCode = code.toUpperCase();\n  const {\n    charts: { timeframes },\n  } = config;\n\n  const cryptoDetailData = useCryptoDetailData(cryptoCode);\n  const [cryptoHistory, chartSeries, timeframe, setTimeframe, cryptoHistoryError] = useCryptoHistory(cryptoCode);\n  const loading = !cryptoDetailData || !cryptoHistory || !chartSeries;\n\n  if (cryptoHistoryError)\n    return (\n      <Alert variant=\"danger\" className=\"my-5\">\n        Something went wrong\n      </Alert>\n    );\n\n  if (loading) return <Spinner animation=\"border\" className=\"my-5\" />;\n\n  const { name, image, price, changePct24h } = cryptoDetailData;\n\n  return (\n    <>\n      <PageMeta title={name} />\n      <Breadcrumbs crumbs={[{ title: CryptoTitle.Base, url: CryptoRouteDictionary.Index }, { title: name }]} />\n      <PageHeading title={name} />\n      <div className=\"mb-5\">\n        <div className=\"d-flex align-items-center fs-2\">\n          <img loading=\"lazy\" alt={name} src={`https://www.cryptocompare.com/${image}`} style={{ width: '4rem' }} />\n          <strong className=\"mx-4\">{formatPrice(price)}</strong>\n          <Percent amount={changePct24h} />\n        </div>\n      </div>\n      <ButtonGroup aria-label=\"Timeframe\" className=\"mb-5\">\n        {timeframes.map((item) => (\n          <Button\n            key={item.title}\n            variant={item === timeframe ? 'primary' : 'secondary'}\n            onClick={() => {\n              setTimeframe(item);\n            }}\n          >\n            {item.title}\n          </Button>\n        ))}\n      </ButtonGroup>\n      <Chart\n        options={{\n          chart: {\n            type: 'candlestick',\n            animations: {\n              enabled: false,\n            },\n            toolbar: {\n              tools: {\n                zoom: false,\n                zoomin: false,\n                zoomout: false,\n                selection: false,\n                pan: false,\n                reset: false,\n              },\n            },\n          },\n          title: {\n            text: `${cryptoCode} / USD Price Chart`,\n            align: 'left',\n          },\n          xaxis: {\n            type: 'datetime',\n          },\n          yaxis: {\n            tooltip: {\n              enabled: true,\n            },\n          },\n        }}\n        series={chartSeries}\n        type=\"candlestick\"\n        height={350}\n      />\n    </>\n  );\n};\n\nexport default CryptoDetail;\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CryptoList from '../components/CryptoList';\nimport CryptoDetail from '../components/CryptoDetail';\n\nconst Crypto: FC = () => {\n  const { code } = useParams();\n\n  return !code ? <CryptoList /> : <CryptoDetail code={code} />;\n};\n\nexport default Crypto;\n","import { atom } from 'recoil';\nimport { recoilPersist } from 'recoil-persist';\n\nconst { persistAtom } = recoilPersist();\n\ninterface MoviesAtom {\n  search: string;\n}\n\nconst moviesAtom = atom<MoviesAtom | null>({\n  key: 'movies',\n  default: { search: '' },\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport default moviesAtom;\n","import { FC } from 'react';\nimport { Image } from 'react-bootstrap';\nimport PageHeading from '../../../components/shared/PageHeading';\n\ninterface MoviesHeadingProps {\n  title: string;\n}\n\nconst MoviesHeading: FC<MoviesHeadingProps> = ({ title }) => (\n  <div className=\"position-relative\" style={{ paddingRight: '200px' }}>\n    <PageHeading title={title} />\n    <Image\n      className=\"position-absolute\"\n      style={{ top: '-2rem', right: 0, height: '5rem' }}\n      loading=\"lazy\"\n      alt=\"themoviedb.org\"\n      src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_1-5bdc75aaebeb75dc7ae79426ddd9be3b2be1e342510f8202baf6bffa71d7f5c4.svg\"\n    />\n  </div>\n);\n\nexport default MoviesHeading;\n","const config = {\n  endpoint: 'https://api.themoviedb.org/3',\n  apiKey: 'cfe422613b250f702980a3bbf9e90716',\n};\n\nexport default config;\n","import useSWR from 'swr';\nimport { MoviesType } from '../enums';\nimport { MovieModel, MovieSearchModel, MovieDetailModel, MovieTrailerModel, TvModel, TvSearchModel } from '../models';\nimport { fetcher } from '../../../utils';\nimport config from '../config';\n\n// TODO: change when swr properly types error response\ntype Error = any;\n\nconst { endpoint, apiKey } = config;\n\nexport const useMoviesList = (query: string): [MovieModel[] | undefined, Error] => {\n  const { data, error } = useSWR<MovieSearchModel>(\n    query ? `${endpoint}/search/${MoviesType.Movie}?query=${query}&api_key=${apiKey}` : null,\n    fetcher,\n  );\n\n  return [data?.results, error];\n};\n\nexport const useMoviesDetail = (id: string): [MovieDetailModel | undefined, Error] => {\n  const { data, error } = useSWR<MovieDetailModel>(\n    id ? `${endpoint}/${MoviesType.Movie}/${id}?api_key=${apiKey}` : null,\n    fetcher,\n  );\n\n  return [data, error];\n};\n\nexport const useMoviesTrailer = (type: MoviesType, id: string): [string | undefined, Error] => {\n  const { data, error } = useSWR<MovieTrailerModel>(\n    id ? `${endpoint}/${type}/${id}/videos?api_key=${apiKey}` : null,\n    fetcher,\n  );\n\n  const trailer = data?.results?.find(({ site, type, official }) =>\n    official ? site === 'YouTube' && type === 'Trailer' && official : site === 'YouTube' && type === 'Trailer',\n  );\n\n  if (!trailer) return [undefined, error];\n\n  const { key } = trailer;\n\n  return [key, error];\n};\n\nexport const useTvList = (query: string): [TvModel[] | undefined, Error] => {\n  const { data, error } = useSWR<TvSearchModel>(\n    query ? `${endpoint}/search/${MoviesType.Tv}?query=${query}&api_key=${apiKey}` : null,\n    fetcher,\n  );\n\n  return [data?.results, error];\n};\n\nexport const useTvDetail = (id: string): [TvModel | undefined, Error] => {\n  const { data, error } = useSWR<TvModel>(id ? `${endpoint}/${MoviesType.Tv}/${id}?api_key=${apiKey}` : null, fetcher);\n\n  return [data, error];\n};\n","export const getMovieImg = (posterPath: string | null) =>\n  posterPath ? `https://image.tmdb.org/t/p/w500${posterPath}` : 'https://via.placeholder.com/500x750?text=NO+PREVIEW';\n","import { FC } from 'react';\nimport { Card, Badge } from 'react-bootstrap';\nimport { getMovieImg } from '../utils';\n\ninterface MoviesCardProps {\n  image: string | null;\n  date: string;\n  title: string;\n}\n\nconst MoviesCard: FC<MoviesCardProps> = ({ image, date, title }) => (\n  <Card style={{ height: '100%' }}>\n    <Card.Img variant=\"top\" src={getMovieImg(image)} />\n    <Card.Body>\n      <Card.Text>\n        <Badge bg=\"secondary\">{date}</Badge>\n      </Card.Text>\n      <Card.Title>{title}</Card.Title>\n    </Card.Body>\n  </Card>\n);\n\nexport default MoviesCard;\n","import { FC } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Alert, Spinner, Tabs, Tab, Row, Col } from 'react-bootstrap';\nimport MoviesRouteDictionary from '../routes';\nimport { MoviesType } from '../enums';\nimport { useMoviesList, useTvList } from '../hooks';\nimport MoviesCard from './MoviesCard';\n\ninterface MoviesListProps {\n  query: string;\n}\n\nconst MoviesList: FC<MoviesListProps> = ({ query }) => {\n  const navigate = useNavigate();\n  const [moviesList, moviesListError] = useMoviesList(query);\n  const [showsList, showsListError] = useTvList(query);\n  const movieRoute = `${MoviesRouteDictionary.Index}/${MoviesType.Movie}`;\n  const tvRoute = `${MoviesRouteDictionary.Index}/${MoviesType.Tv}`;\n\n  if (moviesListError | showsListError)\n    return (\n      <Alert variant=\"danger\" className=\"my-5\">\n        Something went wrong\n      </Alert>\n    );\n\n  if (!moviesList || !showsList) return <Spinner animation=\"border\" className=\"my-5\" />;\n\n  return (\n    <Tabs defaultActiveKey=\"movies\" id=\"uncontrolled-tab-example\">\n      <Tab eventKey=\"movies\" title={`Movies (${moviesList.length})`}>\n        <Row>\n          {moviesList.map(({ id, poster_path, original_title, release_date }) => (\n            <Col key={id} md={6} lg={3} className=\"mt-4\" onClick={() => navigate(`${movieRoute}/${id}`)} role=\"button\">\n              <MoviesCard image={poster_path} date={release_date} title={original_title} />\n            </Col>\n          ))}\n        </Row>\n      </Tab>\n      <Tab eventKey=\"Tvs\" title={`TV Shows (${showsList.length})`}>\n        <Row>\n          {showsList.map(({ id, poster_path, original_name, name, first_air_date }) => (\n            <Col key={id} md={6} lg={3} className=\"mt-4\" onClick={() => navigate(`${tvRoute}/${id}`)} role=\"button\">\n              <MoviesCard\n                image={poster_path}\n                date={first_air_date}\n                title={`${name} ${name !== original_name ? `(${original_name})` : ''}`}\n              />\n            </Col>\n          ))}\n        </Row>\n      </Tab>\n    </Tabs>\n  );\n};\n\nexport default MoviesList;\n","import { FC } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useRecoilState } from 'recoil';\nimport { MoviesTitle } from '../enums';\nimport moviesAtom from '../state/moviesAtom';\nimport PageMeta from '../../../components/shared/PageMeta';\nimport Breadcrumbs from '../../../components/shared/Breadcrumbs';\nimport MoviesHeading from './MoviesHeading';\nimport MoviesList from './MoviesList';\n\nconst MoviesSearch: FC = () => {\n  const [movies, setMovies] = useRecoilState(moviesAtom);\n  const moviesSearch = movies?.search;\n  const title = MoviesTitle.Base;\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <Breadcrumbs crumbs={[{ title }]} />\n      <MoviesHeading title={title} />\n      <Form.Control\n        size=\"lg\"\n        type=\"search\"\n        placeholder=\"Search movies...\"\n        value={moviesSearch}\n        className=\"mb-4\"\n        onChange={(e) => setMovies({ search: e.target.value })}\n      />\n      {moviesSearch && moviesSearch.length >= 3 && <MoviesList query={moviesSearch} />}\n    </>\n  );\n};\n\nexport default MoviesSearch;\n","import { FC } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { MoviesType } from '../enums';\nimport { useMoviesTrailer } from '../hooks';\n\ninterface MoviesTrailerPRops {\n  id: string;\n  type: MoviesType;\n}\n\nconst MoviesTrailer: FC<MoviesTrailerPRops> = ({ type, id }) => {\n  const [key, error] = useMoviesTrailer(type, id);\n\n  if (error)\n    return (\n      <Alert variant=\"danger\" className=\"my-5\">\n        Something went wrong\n      </Alert>\n    );\n\n  if (!key) return null;\n\n  return (\n    <iframe\n      className=\"mt-3\"\n      width=\"100%\"\n      height=\"400\"\n      src={`https://www.youtube.com/embed/${key}`}\n      title=\"YouTube video player\"\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen={true}\n    />\n  );\n};\n\nexport default MoviesTrailer;\n","import { FC, Fragment } from 'react';\nimport { Alert, Spinner, Row, Col, Image, Table } from 'react-bootstrap';\nimport MoviesRouteDictionary from '../routes';\nimport { MoviesType, MoviesTitle } from '../enums';\nimport { useMoviesDetail } from '../hooks';\nimport { getMovieImg } from '../utils';\nimport { formatPrice } from '../../../utils';\nimport PageMeta from '../../../components/shared/PageMeta';\nimport Breadcrumbs from '../../../components/shared/Breadcrumbs';\nimport MoviesHeading from './MoviesHeading';\nimport MoviesTrailer from './MoviesTrailer';\n\ninterface MovieDetailProps {\n  type: MoviesType.Movie;\n  id: string;\n}\n\nconst MovieDetail: FC<MovieDetailProps> = ({ type, id }) => {\n  const [movie, error] = useMoviesDetail(id);\n\n  if (error)\n    return (\n      <Alert variant=\"danger\" className=\"my-5\">\n        Something went wrong\n      </Alert>\n    );\n\n  if (!movie) return <Spinner animation=\"border\" className=\"my-5\" />;\n\n  const {\n    original_title,\n    poster_path,\n    overview,\n    release_date,\n    runtime,\n    genres,\n    production_companies,\n    budget,\n    revenue,\n  } = movie;\n\n  return (\n    <>\n      <PageMeta title={original_title} />\n      <Breadcrumbs\n        crumbs={[{ title: MoviesTitle.Base, url: MoviesRouteDictionary.Index }, { title: original_title }]}\n      />\n      <MoviesHeading title={original_title} />\n      <Row>\n        <Col md={4}>\n          <Image alt={original_title} src={getMovieImg(poster_path)} fluid rounded />\n        </Col>\n        <Col md={8}>\n          <p className=\"lead\">{overview}</p>\n          <Table striped bordered hover responsive>\n            <tbody>\n              <tr>\n                <th>Release</th>\n                <td>{release_date}</td>\n              </tr>\n              <tr>\n                <th>Runtime</th>\n                <td>{runtime} mins</td>\n              </tr>\n              {!!genres?.length && (\n                <tr>\n                  <th>Genres</th>\n                  <td>\n                    {genres.map(({ id, name }, i) => (\n                      <Fragment key={id}>{`${name}${i !== genres.length - 1 ? ', ' : ''}`}</Fragment>\n                    ))}\n                  </td>\n                </tr>\n              )}\n              {!!production_companies?.length && (\n                <tr>\n                  <th>Production</th>\n                  <td>\n                    {production_companies.map(({ id, name }, i) => (\n                      <Fragment key={id}>{`${name}${i !== production_companies.length - 1 ? ', ' : ''}`}</Fragment>\n                    ))}\n                  </td>\n                </tr>\n              )}\n              {budget > 0 && (\n                <tr>\n                  <th>Budget</th>\n                  <td>{formatPrice(budget)}</td>\n                </tr>\n              )}\n              {revenue > 0 && (\n                <tr>\n                  <th>Revenue</th>\n                  <td>{formatPrice(revenue)}</td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n          <MoviesTrailer type={type} id={id} />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default MovieDetail;\n","import { FC, Fragment } from 'react';\nimport { Alert, Spinner, Row, Col, Image, Table } from 'react-bootstrap';\nimport MoviesRouteDictionary from '../routes';\nimport { MoviesType, MoviesTitle } from '../enums';\nimport { useTvDetail } from '../hooks';\nimport { getMovieImg } from '../utils';\nimport PageMeta from '../../../components/shared/PageMeta';\nimport Breadcrumbs from '../../../components/shared/Breadcrumbs';\nimport MoviesHeading from './MoviesHeading';\nimport MoviesTrailer from './MoviesTrailer';\n\ninterface TvDetailProps {\n  type: MoviesType.Tv;\n  id: string;\n}\n\nconst TvDetail: FC<TvDetailProps> = ({ type, id }) => {\n  const [tv, error] = useTvDetail(id);\n\n  if (error)\n    return (\n      <Alert variant=\"danger\" className=\"my-5\">\n        Something went wrong\n      </Alert>\n    );\n\n  if (!tv) return <Spinner animation=\"border\" className=\"my-5\" />;\n\n  const {\n    original_name,\n    name,\n    poster_path,\n    overview,\n    first_air_date,\n    number_of_episodes,\n    genres,\n    production_companies,\n  } = tv;\n\n  const title = `${name} ${name !== original_name ? `(${original_name})` : ''}`;\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <Breadcrumbs crumbs={[{ title: MoviesTitle.Base, url: MoviesRouteDictionary.Index }, { title }]} />\n      <MoviesHeading title={title} />\n      <Row>\n        <Col md={4}>\n          <Image alt={title} src={getMovieImg(poster_path)} fluid rounded />\n        </Col>\n        <Col md={8}>\n          <p className=\"lead\">{overview}</p>\n          <Table striped bordered hover responsive>\n            <tbody>\n              <tr>\n                <th>First air</th>\n                <td>{first_air_date}</td>\n              </tr>\n              <tr>\n                <th>Episodes</th>\n                <td>{number_of_episodes}</td>\n              </tr>\n              {!!genres?.length && (\n                <tr>\n                  <th>Genres</th>\n                  <td>\n                    {genres.map(({ id, name }, i) => (\n                      <Fragment key={id}>{`${name}${i !== genres.length - 1 ? ', ' : ''}`}</Fragment>\n                    ))}\n                  </td>\n                </tr>\n              )}\n              {!!production_companies?.length && (\n                <tr>\n                  <th>Production</th>\n                  <td>\n                    {production_companies.map(({ id, name }, i) => (\n                      <Fragment key={id}>{`${name}${i !== production_companies.length - 1 ? ', ' : ''}`}</Fragment>\n                    ))}\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n          <MoviesTrailer type={type} id={id} />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default TvDetail;\n","import { FC } from 'react';\nimport { MoviesType } from '../enums';\nimport MovieDetail from './MovieDetail';\nimport TvDetail from './TvDetail';\n\ninterface MoviesDetailProps {\n  type: MoviesType;\n  id: string;\n}\n\nconst MoviesDetail: FC<MoviesDetailProps> = ({ type, id }) =>\n  type === MoviesType.Movie ? (\n    <MovieDetail type={MoviesType.Movie} id={id} />\n  ) : (\n    <TvDetail type={MoviesType.Tv} id={id} />\n  );\n\nexport default MoviesDetail;\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MoviesType } from '../enums';\nimport MoviesSearch from '../components/MoviesSearch';\nimport MoviesDetail from '../components/MoviesDetail';\n\nconst Movies: FC = () => {\n  const { id, type } = useParams();\n\n  return !type || !id ? <MoviesSearch /> : <MoviesDetail type={type as MoviesType} id={id} />;\n};\n\nexport default Movies;\n","import { FC } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { RecoilRoot } from 'recoil';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Favorites from './components/Favorites';\n\nimport BaseRouteDictionary from './routes';\nimport Home from './views/Home';\nimport Experience from './views/Experience';\nimport Projects from './views/Projects';\nimport Contact from './views/Contact';\n\nimport Covid19RouteDictionary from './features/covid19/routes';\nimport Covid19 from './features/covid19/views';\n\nimport CryptoRouteDictionary from './features/crypto/routes';\nimport Crypto from './features/crypto/views';\n\nimport MoviesRouteDictionary from './features/movies/routes';\nimport Movies from './features/movies/views';\n\nconst App: FC = () => (\n  <RecoilRoot>\n    <Router>\n      <div className=\"sticky-top\">\n        <Header />\n        <Favorites />\n      </div>\n      <Container className=\"pb-5\">\n        <Routes>\n          <Route path={BaseRouteDictionary.Index} element={<Home />} />\n          <Route path={BaseRouteDictionary.Experience} element={<Experience />} />\n          <Route path={BaseRouteDictionary.Projects} element={<Projects />} />\n          <Route path={BaseRouteDictionary.Contact} element={<Contact />} />\n\n          <Route path={Covid19RouteDictionary.Index} element={<Covid19 />} />\n          <Route path={Covid19RouteDictionary.Detail} element={<Covid19 />} />\n\n          <Route path={CryptoRouteDictionary.Index} element={<Crypto />} />\n          <Route path={CryptoRouteDictionary.Detail} element={<Crypto />} />\n\n          <Route path={MoviesRouteDictionary.Index} element={<Movies />} />\n          <Route path={MoviesRouteDictionary.Detail} element={<Movies />} />\n        </Routes>\n      </Container>\n    </Router>\n  </RecoilRoot>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export enum MoviesTitle {\n  Base = 'Movies',\n}\n\nexport enum MoviesType {\n  Movie = 'movie',\n  Tv = 'tv',\n}\n","export enum PageTitle {\n  Home = 'Home',\n  Experience = 'Experience',\n  Projects = 'Projects',\n  Features = 'Features',\n  Contact = 'Contact',\n}\n","import nav from './nav';\nimport skillset from './skillset';\nimport experience from './experience';\nimport projects from './projects';\n\nconst config = {\n  brand: 'CV',\n  socials: {\n    github:\n      '&#x68;&#x74;&#x74;&#x70;&#x73;&#x3A;&#x2F;&#x2F;&#x67;&#x69;&#x74;&#x68;&#x75;&#x62;&#x2E;&#x63;&#x6F;&#x6D;&#x2F;&#x6A;&#x75;&#x72;&#x69;&#x6B;&#x6F;&#x73;',\n    linkedin:\n      '&#x68;&#x74;&#x74;&#x70;&#x73;&#x3A;&#x2F;&#x2F;&#x77;&#x77;&#x77;&#x2E;&#x6C;&#x69;&#x6E;&#x6B;&#x65;&#x64;&#x69;&#x6E;&#x2E;&#x63;&#x6F;&#x6D;&#x2F;&#x69;&#x6E;&#x2F;&#x6A;&#x75;&#x72;&#x69;&#x6B;&#x6F;&#x73;',\n  },\n  contact: {\n    email:\n      '&#x6A;&#x75;&#x72;&#x69;&period;&#x6B;&#x6F;&#x73;&#x74;&#x6A;&#x75;&#x6E;&#x69;&#x6E;&commat;&#x67;&#x6D;&#x61;&#x69;&#x6C;&period;&#x63;&#x6F;&#x6D;',\n    phone: '&plus;&#x33;&#x37;&#x32;&#x20;&#x35;&#x32;&#x37;&#x36;&#x20;&#x36;&#x30;&#x34;',\n  },\n  nav,\n  skillset,\n  experience,\n  projects,\n};\n\nexport default config;\n","import BaseRouteDictionary from '../routes';\nimport { PageTitle } from '../enums';\n\nimport Covid19RouteDictionary from '../features/covid19/routes';\nimport { Covid19Title } from '../features/covid19/enums';\n\nimport CryptoRouteDictionary from '../features/crypto/routes';\nimport { CryptoTitle } from '../features/crypto/enums';\n\nimport MoviesRouteDictionary from '../features/movies/routes';\nimport { MoviesTitle } from '../features/movies/enums';\n\nconst nav = [\n  {\n    title: PageTitle.Experience,\n    url: BaseRouteDictionary.Experience,\n  },\n  {\n    title: PageTitle.Projects,\n    url: BaseRouteDictionary.Projects,\n  },\n  {\n    title: PageTitle.Features,\n    url: BaseRouteDictionary.Features,\n    children: [\n      { title: Covid19Title.Base, url: Covid19RouteDictionary.Index },\n      { title: CryptoTitle.Base, url: CryptoRouteDictionary.Index },\n      { title: MoviesTitle.Base, url: MoviesRouteDictionary.Index },\n    ],\n  },\n  {\n    title: PageTitle.Contact,\n    url: BaseRouteDictionary.Contact,\n  },\n];\n\nexport default nav;\n","const skillset = [\n  {\n    title: 'Frontend',\n    items: [\n      'JavaScript / TypeScript',\n      'REST API, GraphQL',\n      'React, React Native',\n      'Redux, Recoil, Context',\n      'Jest',\n      'Vue.js',\n      'Svelte',\n      'HTML, CSS, Sass',\n      'Bootstrap, Material UI',\n    ],\n  },\n  {\n    title: 'Backend / DevOps',\n    items: ['Node.js', 'Python', 'PHP', 'Docker', 'MySQL', 'MongoDB', 'AWS', 'Vercel'],\n  },\n  {\n    title: 'UX / UI',\n    items: ['Figma', 'Sketch', 'Invision', 'Material Design', 'Photoshop', 'Illustrator'],\n  },\n  {\n    title: 'Frameworks / Platforms',\n    items: ['Next.js', 'Shopify', 'Magento 2', 'Magento PWA Studio', 'WordPress'],\n  },\n  {\n    title: 'Methodologies / Processes',\n    items: ['Test-driven development', 'Agile', 'Scrum', 'Kanban'],\n  },\n  {\n    title: 'Other',\n    items: ['Leadership', 'Project management', 'eCommerce', 'Technical analysis (finance)'],\n  },\n];\n\nexport default skillset;\n","const experience = [\n  {\n    company: 'Onpolar OÜ',\n    website: 'https://www.onpolar.com',\n    role: 'React Frontend Developer',\n    date: 'Jun 2021 - Present',\n    description: 'React / TypeScript development, Day-to-Day Business Management',\n    projects: [\n      'External consultant (NDA)',\n      'iPharma',\n      'Shopify Headless',\n      'Commercium7',\n      'Doctor.ee',\n      'Token.ee',\n      'Logistar',\n      'KES',\n      'Onpolar',\n    ],\n  },\n  {\n    company: 'Vaimo OÜ',\n    role: 'Magento Frontend Developer',\n    website: 'https://www.vaimo.com',\n    date: 'Dec 2011 - Jun 2021',\n    description:\n      'Magento Frontend development, UX Design, SEO Improvements, Consulting, Maintenance. Massive and smaller projects. Passed Magento Front End Developer Certification exam.',\n    projects: ['HellyHansen', 'Kaubamaja', 'Selver', 'Konga', 'Pavers', 'Bauhaus'],\n  },\n  {\n    company: 'Salespoint OÜ',\n    role: 'Frontend Developer',\n    date: 'Jan 2010 - Dec 2011',\n    description: 'Project management, ux design, html/css/js coding, seo, copywriting, internet marketing',\n  },\n  {\n    company: 'Exact Holdings OÜ',\n    role: 'HTML / CSS Coder',\n    date: 'Jun 2008 - Jan 2010',\n    description: 'HTML / CSS / jQuery coding and web design',\n  },\n];\n\nexport default experience;\n","const projects = [\n  {\n    title: 'Shopify Headless',\n    description: 'Shopify Headless Demo',\n    url: 'https://demo.commercium7.com',\n    stack: ['Shopify', 'React', 'Recoil', 'Next.js', 'Vercel'],\n  },\n  {\n    title: 'Ipharma',\n    description: 'iPharma eCommerce PWA',\n    url: 'https://www.ipharma.ee',\n    stack: ['Magento 2', 'Magento PWA Studio', 'React', 'AWS'],\n  },\n  {\n    title: 'Doctor.ee',\n    description: 'Doctor.ee Web App',\n    url: 'https://www.doctor.ee',\n    stack: ['React', 'Next.js', 'Material UI', 'Vercel'],\n  },\n  {\n    title: 'Token.ee',\n    description: 'Token.ee Web App',\n    url: 'https://www.token.ee',\n    stack: ['React', 'Redux', 'Bootstrap', 'Vercel'],\n  },\n  {\n    title: 'Commercium7',\n    description: 'Commercium7 Website',\n    url: 'https://www.commercium7.com',\n    stack: ['React', 'Recoil', 'Next.js', 'Vercel'],\n  },\n  {\n    title: 'Onpolar',\n    description: 'Onpolar Website',\n    url: 'https://www.onpolar.com',\n    stack: ['React', 'Next.js', 'Vercel'],\n  },\n  { title: 'KES', description: 'KES Website', url: 'https://www.kolomna.ee', stack: ['React', 'Next.js', 'Vercel'] },\n  {\n    title: 'Logistar',\n    description: 'Logistar Website',\n    url: 'https://www.logistar.ee',\n    stack: ['React', 'Next.js', 'Vercel'],\n  },\n];\n\nexport default projects;\n","type BaseRoutes = 'Index' | 'Experience' | 'Projects' | 'Features' | 'Contact';\n\nconst BaseRouteDictionary: { [key in BaseRoutes]: string } = {\n  Index: '/',\n  Experience: '/experience',\n  Projects: '/projects',\n  Features: '/features',\n  Contact: '/contact',\n};\n\nexport default BaseRouteDictionary;\n","type MoviesRoutes = 'Index' | 'Detail';\n\nconst MoviesRouteDictionary: { [key in MoviesRoutes]: string } = {\n  Index: '/features/movies',\n  Detail: '/features/movies/:type/:id',\n};\n\nexport default MoviesRouteDictionary;\n","export enum CryptoTitle {\n  Base = 'Crypto',\n}\n\nexport enum CryptoApiStatusEnum {\n  Success = 'Success',\n  Error = 'Error',\n}\n","type Covid19Routes = 'Index' | 'Detail';\n\nconst Covid19RouteDictionary: { [key in Covid19Routes]: string } = {\n  Index: '/features/covid-19',\n  Detail: '/features/covid-19/:country',\n};\n\nexport default Covid19RouteDictionary;\n","type CryptoRoutes = 'Index' | 'Detail';\n\nconst CryptoRouteDictionary: { [key in CryptoRoutes]: string } = {\n  Index: '/features/crypto',\n  Detail: '/features/crypto/:code',\n};\n\nexport default CryptoRouteDictionary;\n","export enum Covid19Title {\n  Base = 'Covid 19',\n}\n"],"sourceRoot":""}