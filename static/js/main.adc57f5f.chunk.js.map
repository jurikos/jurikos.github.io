{"version":3,"sources":["models/crypto.ts","components/shared/Socials.tsx","components/Header.tsx","state/atoms/favoriteCryptoAtom.ts","utils/index.ts","components/shared/Percent.tsx","hooks/crypto.tsx","components/Favorites.tsx","components/shared/PageMeta.tsx","components/shared/PageHeading.tsx","views/Home.tsx","components/shared/Breadcrumbs.tsx","views/Experience.tsx","views/Projects.tsx","components/shared/TableHeadingSort.tsx","components/covid19/CovidList.tsx","hooks/covid19.tsx","components/covid19/CovidDetail.tsx","views/Covid19.tsx","components/crypto/CryptoList.tsx","components/crypto/CryptoDetail.tsx","views/Crypto.tsx","views/Contact.tsx","App.tsx","reportWebVitals.ts","index.tsx","config/nav.ts","config/index.ts","config/skillset.ts","config/experience.ts","config/projects.ts","config/features.ts"],"names":["CryptoApiStatusEnum","Socials","variant","color","config","socials","github","linkedin","rootClassName","classNames","linkClassName","className","href","decode","target","rel","size","Header","brand","nav","pathname","useLocation","Navbar","bg","expand","Container","Brand","to","as","Link","Toggle","aria-controls","Collapse","id","Nav","map","title","url","children","NavDropdown","active","includes","Item","persistAtom","recoilPersist","favoriteCryptoAtom","atom","key","default","effects_UNSTABLE","fetcher","fetch","then","r","json","removeProtocolFromUrl","replace","formatPrice","price","locale","currency","Intl","NumberFormat","style","maximumFractionDigits","format","formatNumber","number","arrSortAscByKey","arr","sort","a","b","_get","arrSortDescByKey","arrSortStringAscByKey","localeCompare","arrSortStringDescByKey","Percent","amount","toFixed","pctClassName","features","timeframes","charts","endpoint","crypto","useCryptoList","useState","cryptoList","setCryptoList","responseError","setResponseError","useSWR","revalidateOnFocus","data","error","useEffect","Message","Data","Success","useCryptoDetailData","code","cryptoListError","cryptoDetailData","find","item","CoinInfo","Name","name","FullName","image","ImageUrl","RAW","USD","PRICE","changePct24h","CHANGEPCT24HOUR","FavoriteCryptoData","Spinner","animation","Favorites","useRecoilState","favoriteCrypto","setFavoriteCrypto","loading","alt","src","width","role","onClick","PageMeta","description","Helmet","content","PageHeading","Home","navigate","useNavigate","skillset","Row","Col","lg","Button","items","md","Card","height","Body","Title","Text","Breadcrumbs","crumbs","Breadcrumb","Experience","experience","Accordion","defaultActiveKey","i","company","website","date","projects","eventKey","Badge","length","project","Projects","stack","TableHeadingSort","onAsc","onDesc","iconSize","CovidList","covid19","covidList","setCovidList","useCovidList","search","setSearch","Alert","Form","Control","type","placeholder","onChange","e","value","Table","responsive","striped","bordered","hover","sortByString","filter","country","toLowerCase","todayCases","cases","todayDeaths","deaths","flag","countryInfo","CovidDetail","covidDetail","setCovidDetail","useCovidDetail","countryName","population","recovered","todayRecovered","critical","options","labels","colors","tooltip","y","formatter","val","series","Covid19","useParams","CryptoList","iconColor","marketCap","MKTCAP","isFavorite","CryptoDetail","cryptoCode","toUpperCase","undefined","cryptoHistory","setCryptoHistory","timeframe","setTimeframe","chartSeries","setChartSeries","limit","aggregate","Response","x","time","open","high","low","close","useCryptoHistory","ButtonGroup","aria-label","chart","animations","enabled","toolbar","tools","zoom","zoomin","zoomout","selection","pan","reset","text","align","xaxis","yaxis","Crypto","ContactDetails","lazy","Contact","contact","setContact","fallback","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","email","phone"],"mappings":"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","file":"static/js/main.adc57f5f.chunk.js","sourcesContent":["export enum CryptoApiStatusEnum {\n  Success = 'Success',\n  Error = 'Error',\n}\n\ninterface CoinInfoModel {\n  Name: string;\n  FullName: string;\n  ImageUrl: string;\n  MaxSupply: number;\n}\n\ninterface PriceDataModel {\n  PRICE: number;\n  CHANGEPCT24HOUR: number;\n  SUPPLY: number;\n  MKTCAP: number;\n}\n\nexport interface CryptoHistoryDataModel {\n  close: number;\n  high: number;\n  low: number;\n  open: number;\n  time: number;\n}\n\nexport interface CryptoListDataModel {\n  CoinInfo: CoinInfoModel;\n  RAW: { USD: PriceDataModel };\n}\n\nexport interface CryptoListModel {\n  Data: CryptoListDataModel[];\n  Message: string;\n}\n\nexport interface CryptoHistoryModel {\n  Data: CryptoHistoryDataModel[];\n  Response: CryptoApiStatusEnum;\n}\n","import { FC } from 'react';\nimport { Github, Linkedin } from 'react-bootstrap-icons';\nimport classNames from 'classnames';\nimport { decode } from 'html-entities';\nimport config from '../../config';\n\ninterface SocialsProps {\n  variant?: 'headerSm' | 'headerLg' | 'content';\n  color: string;\n}\n\nconst Socials: FC<SocialsProps> = ({ variant, color }) => {\n  const {\n    socials: { github, linkedin },\n  } = config;\n  const rootClassName = classNames({\n    'd-lg-none my-2': variant === 'headerSm',\n    'ml-auto d-none d-lg-block': variant === 'headerLg',\n  });\n  const linkClassName = classNames({\n    'me-4': variant === 'headerSm' || variant === 'content',\n    'ms-4': variant === 'headerLg',\n  });\n\n  return (\n    <div className={rootClassName}>\n      <a className={linkClassName} href={decode(github)} target=\"_blank\" rel=\"noreferrer\">\n        <Github color={color} size={24} />\n      </a>\n      <a className={linkClassName} href={decode(linkedin)} target=\"_blank\" rel=\"noreferrer\">\n        <Linkedin color={color} size={24} />\n      </a>\n    </div>\n  );\n};\n\nexport default Socials;\n","import { FC, Fragment } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\nimport Socials from './shared/Socials';\nimport config from '../config';\n\nconst Header: FC = () => {\n  const { brand, nav } = config;\n  const { pathname } = useLocation();\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Container>\n        <Navbar.Brand to=\"/\" as={Link}>\n          {brand}\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"navbar-nav\" />\n        <Navbar.Collapse id=\"navbar-nav\">\n          <Nav>\n            {nav.map(({ title, url, children }) => (\n              <Fragment key={title}>\n                {!children ? (\n                  <Nav.Link to={url} as={Link} active={pathname === url}>\n                    {title}\n                  </Nav.Link>\n                ) : (\n                  <NavDropdown title={title} id=\"nav-dropdown\" active={pathname.includes(url)}>\n                    {children.map(({ title, url }) => (\n                      <NavDropdown.Item key={title} to={url} as={Link} active={pathname === url}>\n                        {title}\n                      </NavDropdown.Item>\n                    ))}\n                  </NavDropdown>\n                )}\n              </Fragment>\n            ))}\n          </Nav>\n          <Socials variant=\"headerSm\" color=\"white\" />\n        </Navbar.Collapse>\n        <Socials variant=\"headerLg\" color=\"white\" />\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import { atom } from 'recoil';\nimport { recoilPersist } from 'recoil-persist';\n\nconst { persistAtom } = recoilPersist();\n\ninterface FavoriteCryptoAtom {\n  code: string;\n  image: string;\n}\n\nconst favoriteCryptoAtom = atom<FavoriteCryptoAtom | null>({\n  key: 'favoriteCrypto',\n  default: null,\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport default favoriteCryptoAtom;\n","import { get as _get } from 'lodash';\n\nexport const fetcher = (url: string) => fetch(url).then((r) => r.json());\n\nexport const removeProtocolFromUrl = (url: string) => url.replace(/(^\\w+:|^)\\/\\//, '');\n\nexport const formatPrice = (price: number, locale = 'en', currency = 'USD'): string =>\n  new Intl.NumberFormat(locale, { style: 'currency', currency, maximumFractionDigits: 4 }).format(price);\n\nexport const formatNumber = (number: number, locale = 'en'): string => new Intl.NumberFormat(locale).format(number);\n\nexport const arrSortAscByKey = (arr: any[], key: string) => arr.sort((a, b) => _get(b, key) - _get(a, key));\n\nexport const arrSortDescByKey = (arr: any[], key: string) => arr.sort((a, b) => _get(a, key) - _get(b, key));\n\nexport const arrSortStringAscByKey = (arr: any[], key: string) =>\n  arr.sort((a, b) => _get(a, key).localeCompare(_get(b, key)));\n\nexport const arrSortStringDescByKey = (arr: any[], key: string) =>\n  arr.sort((a, b) => _get(b, key).localeCompare(_get(a, key)));\n","import { FC } from 'react';\nimport classNames from 'classnames';\n\ninterface PageHeadingProps {\n  amount: number;\n  toFixed?: number;\n}\n\nconst Percent: FC<PageHeadingProps> = ({ amount, toFixed = 2 }) => {\n  const pctClassName = classNames({\n    'text-danger': amount < 0,\n    'text-success': amount > 0,\n  });\n\n  return <span className={pctClassName}>{amount.toFixed(toFixed)}%</span>;\n};\n\nexport default Percent;\n","import { useEffect, useState, Dispatch, SetStateAction } from 'react';\nimport useSWR from 'swr';\nimport {\n  CryptoApiStatusEnum,\n  CryptoListDataModel,\n  CryptoListModel,\n  CryptoHistoryDataModel,\n  CryptoHistoryModel,\n} from '../models/crypto';\nimport { fetcher } from '../utils';\nimport config from '../config';\n\nconst {\n  features: {\n    charts: { timeframes },\n    crypto: { endpoint },\n  },\n} = config;\n\n// TODO: change when swr properly types error response\ntype Error = any;\n\nexport const useCryptoList = (): [\n  CryptoListDataModel[] | undefined,\n  Dispatch<SetStateAction<CryptoListDataModel[] | undefined>>,\n  Error,\n] => {\n  const [cryptoList, setCryptoList] = useState<CryptoListDataModel[] | undefined>();\n  const [responseError, setResponseError] = useState(false);\n  const { data, error } = useSWR<CryptoListModel>(`${endpoint}/top/mktcapfull?limit=100&tsym=USD`, fetcher, {\n    revalidateOnFocus: false,\n  });\n\n  useEffect(() => {\n    if (data) {\n      const { Message, Data } = data;\n      Message === CryptoApiStatusEnum.Success ? setCryptoList(Data) : setResponseError(true);\n    }\n  }, [data]);\n\n  return [cryptoList, setCryptoList, error || responseError];\n};\n\ntype Timeframe = {\n  title: string;\n  limit: number;\n  aggregate: number;\n};\n\ntype ChartSeries = any[] | undefined;\n\ntype CryptoHistory = CryptoHistoryDataModel[] | undefined;\n\nexport const useCryptoHistory = (\n  cryptoCode: string,\n): [CryptoHistory, ChartSeries, Timeframe, Dispatch<SetStateAction<Timeframe>>, Error] => {\n  const [cryptoHistory, setCryptoHistory] = useState<CryptoHistory>(undefined);\n  const [timeframe, setTimeframe] = useState<Timeframe>(timeframes[0]);\n  const [chartSeries, setChartSeries] = useState<ChartSeries>();\n  const [responseError, setResponseError] = useState(false);\n  const { data, error } = useSWR<CryptoHistoryModel>(\n    `${endpoint}/histoday?fsym=${cryptoCode}&tsym=USD&limit=${timeframe.limit}&aggregate=${timeframe.aggregate}&allData=false`,\n    fetcher,\n  );\n\n  useEffect(() => {\n    if (data) {\n      const { Response, Data } = data;\n\n      if (Response === CryptoApiStatusEnum.Success) {\n        setCryptoHistory(Data);\n        setChartSeries([\n          {\n            data: Data.map(({ time, open, high, low, close }) => {\n              return {\n                x: time * 1000,\n                y: [open, high, low, close],\n              };\n            }),\n          },\n        ]);\n        return;\n      }\n\n      setResponseError(true);\n    }\n  }, [data]);\n\n  return [cryptoHistory, chartSeries, timeframe, setTimeframe, error || responseError];\n};\n\ninterface CryptoDetail {\n  code: string;\n  name: string;\n  image: string;\n  price: number;\n  changePct24h: number;\n}\n\nexport const useCryptoDetailData = (code: string): CryptoDetail | null => {\n  const [cryptoList, , cryptoListError] = useCryptoList();\n  const cryptoDetailData = cryptoList?.find((item) => item.CoinInfo.Name === code);\n\n  if (!cryptoList || cryptoListError || !cryptoDetailData) return null;\n\n  const {\n    CoinInfo: { FullName: name, ImageUrl: image },\n    RAW: {\n      USD: { PRICE: price, CHANGEPCT24HOUR: changePct24h },\n    },\n  } = cryptoDetailData;\n\n  return { code, name, image, price, changePct24h };\n};\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useRecoilState } from 'recoil';\nimport { Container, Spinner } from 'react-bootstrap';\nimport { X } from 'react-bootstrap-icons';\nimport favoriteCryptoAtom from '../state/atoms/favoriteCryptoAtom';\nimport { formatPrice } from '../utils';\nimport Percent from './shared/Percent';\nimport { useCryptoDetailData } from '../hooks/crypto';\n\ninterface FavoriteCryptoDataProps {\n  code: string;\n}\n\nconst FavoriteCryptoData: FC<FavoriteCryptoDataProps> = ({ code }) => {\n  const cryptoDetailData = useCryptoDetailData(code);\n\n  if (!cryptoDetailData) return <Spinner animation=\"border\" size=\"sm\" className=\"ms-2\" />;\n\n  const { price, changePct24h } = cryptoDetailData;\n\n  return (\n    <>\n      <span className=\"mx-2\">{formatPrice(price)}</span>\n      <Percent amount={changePct24h} />\n    </>\n  );\n};\n\nconst Favorites: FC = () => {\n  const [favoriteCrypto, setFavoriteCrypto] = useRecoilState(favoriteCryptoAtom);\n\n  if (!favoriteCrypto) return null;\n\n  const { code, image } = favoriteCrypto;\n\n  return (\n    <div className=\"bg-white border-bottom\">\n      <Container className=\"py-2\">\n        <div className=\"d-flex align-items-center\">\n          <img\n            loading=\"lazy\"\n            alt={code}\n            src={`https://www.cryptocompare.com/${image}`}\n            style={{ width: '1rem' }}\n            className=\"me-2\"\n          />\n          <Link to={`features/crypto/${code}`}>\n            <strong>{code}</strong>\n          </Link>\n          <FavoriteCryptoData code={code} />\n          <span\n            className=\"ms-1 d-flex\"\n            role=\"button\"\n            onClick={() => setFavoriteCrypto(null)}\n            title=\"Remove from Favorites\"\n          >\n            <X size={20} color=\"var(--bs-red)\" />\n          </span>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default Favorites;\n","import { FC } from 'react';\nimport { Helmet } from 'react-helmet';\nimport config from '../../config';\n\ninterface PageMetaProps {\n  title?: string;\n  description?: string;\n}\n\nconst PageMeta: FC<PageMetaProps> = ({ title, description }) => (\n  <Helmet>\n    {title && (\n      <title>\n        {title} | {config.brand}\n      </title>\n    )}\n    {description && <meta name=\"description\" content={description} />}\n  </Helmet>\n);\n\nexport default PageMeta;\n","import { FC } from 'react';\n\ninterface PageHeadingProps {\n  title: string;\n}\n\nconst PageHeading: FC<PageHeadingProps> = ({ title }) => <h1 className=\"display-5 fw-bold my-5\">{title}</h1>;\n\nexport default PageHeading;\n","import { FC } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Row, Col, Button, Card } from 'react-bootstrap';\nimport config from '../config';\nimport PageMeta from '../components/shared/PageMeta';\nimport PageHeading from '../components/shared/PageHeading';\n\nconst Home: FC = () => {\n  const navigate = useNavigate();\n  const { skillset } = config;\n\n  return (\n    <>\n      <PageMeta title=\"Home\" />\n      <Row className=\"my-5\">\n        <Col lg={6} className=\"mx-auto text-center\">\n          <PageHeading title=\"React Frontend Developer\" />\n          <p className=\"lead mb-3\">\n            Senior Frontend Web &amp; Mobile developer with a strong focus on performance optimisation, clean code and\n            passion to UX.\n          </p>\n          <Button size=\"lg\" variant=\"primary\" className=\"m-2\" onClick={() => navigate('/experience')}>\n            Experience\n          </Button>\n          <Button size=\"lg\" variant=\"outline-secondary\" className=\"m-2\" onClick={() => navigate('/projects')}>\n            Projects\n          </Button>\n        </Col>\n      </Row>\n      <h2>Skillset</h2>\n      <Row>\n        {skillset.map(({ title, items }) => (\n          <Col key={title} md={6} lg={4} className=\"mt-4\">\n            <Card style={{ height: '100%' }}>\n              <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <Card.Text as=\"div\">\n                  <ul>\n                    {items.map((item) => (\n                      <li key={item}>{item}</li>\n                    ))}\n                  </ul>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Home;\n","import { FC, Fragment } from 'react';\nimport { Breadcrumb } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\ninterface BreadcrumbsProps {\n  crumbs: { title: string; url?: string }[];\n  className?: string;\n}\n\nconst Breadcrumbs: FC<BreadcrumbsProps> = ({ crumbs, className = 'my-3' }) => (\n  <Breadcrumb className={className}>\n    <LinkContainer to=\"/\">\n      <Breadcrumb.Item>Home</Breadcrumb.Item>\n    </LinkContainer>\n    {crumbs.map(({ title, url }) => (\n      <Fragment key={title}>\n        {url ? (\n          <LinkContainer to={url}>\n            <Breadcrumb.Item>{title}</Breadcrumb.Item>\n          </LinkContainer>\n        ) : (\n          <Breadcrumb.Item active>{title}</Breadcrumb.Item>\n        )}\n      </Fragment>\n    ))}\n  </Breadcrumb>\n);\n\nexport default Breadcrumbs;\n","import { FC } from 'react';\nimport { Accordion, Badge, Button } from 'react-bootstrap';\nimport { removeProtocolFromUrl } from '../utils';\nimport config from '../config';\nimport PageMeta from '../components/shared/PageMeta';\nimport Breadcrumbs from '../components/shared/Breadcrumbs';\nimport PageHeading from '../components/shared/PageHeading';\n\nconst Experience: FC = () => {\n  const { experience } = config;\n  const title = 'Experience';\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <Breadcrumbs crumbs={[{ title }]} />\n      <PageHeading title={title} />\n      <Accordion defaultActiveKey=\"0\">\n        {experience.map(({ company, website, role, date, description, projects }, i) => (\n          <Accordion.Item eventKey={`${i}`} key={date}>\n            <Accordion.Header>{role}</Accordion.Header>\n            <Accordion.Body>\n              <Badge bg=\"secondary\">{date}</Badge>\n              <h2 className=\"display-8 mt-2\">{company}</h2>\n              {website && (\n                <Button href={website} size=\"sm\" variant=\"outline-primary\" target=\"_blank\">\n                  {removeProtocolFromUrl(website)}\n                </Button>\n              )}\n              {description && <p className=\"mt-4 mb-0\">{description}</p>}\n              {projects?.length && (\n                <>\n                  <h3 className=\"fs-4 text-secondary mt-4\">Projects</h3>\n                  <ul>\n                    {projects.map((project) => (\n                      <li key={project}>{project}</li>\n                    ))}\n                  </ul>\n                </>\n              )}\n            </Accordion.Body>\n          </Accordion.Item>\n        ))}\n      </Accordion>\n    </>\n  );\n};\n\nexport default Experience;\n","import { FC } from 'react';\nimport { Row, Col, Button, Card, Badge } from 'react-bootstrap';\nimport { removeProtocolFromUrl } from '../utils';\nimport config from '../config';\nimport PageMeta from '../components/shared/PageMeta';\nimport Breadcrumbs from '../components/shared/Breadcrumbs';\nimport PageHeading from '../components/shared/PageHeading';\n\nconst Projects: FC = () => {\n  const { projects } = config;\n  const title = 'Projects';\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <Breadcrumbs crumbs={[{ title }]} />\n      <PageHeading title={title} />\n      <Row>\n        {projects.map(({ title, description, url, stack }) => (\n          <Col key={title} md={6} lg={4} className=\"mb-4\">\n            <Card style={{ height: '100%' }}>\n              <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <Card.Text>{description}</Card.Text>\n                {url && (\n                  <Button variant=\"primary\" href={url} target=\"_blank\">\n                    {removeProtocolFromUrl(url)}\n                  </Button>\n                )}\n                {stack && (\n                  <div className=\"mt-3\">\n                    {stack.map((item) => (\n                      <Badge key={item} bg=\"secondary\" className=\"mt-2 me-2\">\n                        {item}\n                      </Badge>\n                    ))}\n                  </div>\n                )}\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Projects;\n","import { FC } from 'react';\nimport { ArrowUpShort, ArrowDownShort } from 'react-bootstrap-icons';\n\ninterface TableHeadingSortProps {\n  title: string;\n  onAsc: () => void;\n  onDesc: () => void;\n  iconSize?: number;\n}\n\nconst TableHeadingSort: FC<TableHeadingSortProps> = ({ title, onAsc, onDesc, iconSize = 16 }) => (\n  <th>\n    <div className=\"d-flex justify-content-between\">\n      {title}\n      <div>\n        <ArrowUpShort size={iconSize} role=\"button\" onClick={onAsc} />\n        <ArrowDownShort size={iconSize} role=\"button\" onClick={onDesc} />\n      </div>\n    </div>\n  </th>\n);\n\nexport default TableHeadingSort;\n","import { FC, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Alert, Spinner, Form, Table } from 'react-bootstrap';\nimport { useCovidList } from '../../hooks/covid19';\nimport {\n  arrSortAscByKey,\n  arrSortDescByKey,\n  arrSortStringAscByKey,\n  arrSortStringDescByKey,\n  formatNumber,\n} from '../../utils';\nimport PageMeta from '../shared/PageMeta';\nimport Breadcrumbs from '../shared/Breadcrumbs';\nimport PageHeading from '../shared/PageHeading';\nimport TableHeadingSort from '../shared/TableHeadingSort';\n\nconst CovidList: FC = () => {\n  const [covidList, setCovidList, error] = useCovidList();\n  const [search, setSearch] = useState('');\n  const title = 'Covid19';\n\n  if (error)\n    return (\n      <Alert variant=\"danger\" className=\"my-5\">\n        Something went wrong\n      </Alert>\n    );\n\n  if (!covidList) return <Spinner animation=\"border\" className=\"my-5\" />;\n\n  const tableHeadings = [\n    { title: 'Country', key: 'country', sortByString: true },\n    { title: 'Cases today', key: 'todayCases' },\n    { title: 'Cases total', key: 'cases' },\n    { title: 'Deaths today', key: 'todayDeaths' },\n    { title: 'Deaths total', key: 'deaths' },\n  ];\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <Breadcrumbs crumbs={[{ title }]} />\n      <PageHeading title={title} />\n      <Form.Control\n        size=\"lg\"\n        type=\"search\"\n        placeholder=\"Search by country...\"\n        className=\"mb-4\"\n        onChange={(e) => setSearch(e.target.value)}\n      />\n      <Table responsive striped bordered hover>\n        <thead>\n          <tr>\n            {tableHeadings.map(({ title, key, sortByString }) => (\n              <TableHeadingSort\n                key={key}\n                title={title}\n                onAsc={() =>\n                  setCovidList([\n                    ...(sortByString ? arrSortStringAscByKey(covidList, key) : arrSortAscByKey(covidList, key)),\n                  ])\n                }\n                onDesc={() =>\n                  setCovidList([\n                    ...(sortByString ? arrSortStringDescByKey(covidList, key) : arrSortDescByKey(covidList, key)),\n                  ])\n                }\n              />\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {covidList\n            .filter(({ country }) => country.toLowerCase().includes(search.toLowerCase()))\n            .map(({ country, todayCases, cases, todayDeaths, deaths, countryInfo: { flag } }) => (\n              <tr key={country}>\n                <td>\n                  <img loading=\"lazy\" style={{ width: '1rem' }} alt={country} src={flag} />{' '}\n                  <Link to={country.toLowerCase()}>{country}</Link>\n                </td>\n                <td>{todayCases > 0 ? <strong>{formatNumber(todayCases)}</strong> : formatNumber(todayCases)}</td>\n                <td>{formatNumber(cases)}</td>\n                <td>\n                  {todayDeaths > 0 ? (\n                    <strong className=\"text-danger\">{formatNumber(todayDeaths)}</strong>\n                  ) : (\n                    formatNumber(todayDeaths)\n                  )}\n                </td>\n                <td>{deaths > 0 ? <strong>{formatNumber(deaths)}</strong> : formatNumber(deaths)}</td>\n              </tr>\n            ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default CovidList;\n","import { useEffect, useState, Dispatch, SetStateAction } from 'react';\nimport useSWR from 'swr';\nimport { CountryModel } from '../models/covid19';\nimport { fetcher } from '../utils';\nimport config from '../config';\n\n// TODO: change when swr properly types error response\ntype Error = any;\n\nexport const useCovidList = (): [\n  CountryModel[] | undefined,\n  Dispatch<SetStateAction<CountryModel[] | undefined>>,\n  Error,\n] => {\n  const {\n    features: {\n      covid19: { endpoint },\n    },\n  } = config;\n  const [covidList, setCovidList] = useState<CountryModel[] | undefined>();\n  const { data, error } = useSWR<CountryModel[]>(`${endpoint}/covid-19/countries`, fetcher, {\n    revalidateOnFocus: false,\n  });\n\n  useEffect(() => {\n    if (data) setCovidList(data);\n  }, [data]);\n\n  return [covidList, setCovidList, error];\n};\n\nexport const useCovidDetail = (country: string): [CountryModel | undefined, Error] => {\n  const {\n    features: {\n      covid19: { endpoint },\n    },\n  } = config;\n  const [covidDetail, setCovidDetail] = useState<CountryModel | undefined>();\n  const { data, error } = useSWR<CountryModel>(`${endpoint}/covid-19/countries/${country}`, fetcher, {\n    revalidateOnFocus: false,\n  });\n\n  useEffect(() => {\n    if (data) setCovidDetail(data);\n  }, [data]);\n\n  return [covidDetail, error];\n};\n","import { FC } from 'react';\nimport { Alert, Spinner, Row, Col, Table } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport { useCovidDetail } from '../../hooks/covid19';\nimport { formatNumber } from '../../utils';\nimport PageMeta from '../shared/PageMeta';\nimport Breadcrumbs from '../shared/Breadcrumbs';\nimport PageHeading from '../shared/PageHeading';\n\ninterface CovidDetailProps {\n  country: string;\n}\n\nconst CovidDetail: FC<CovidDetailProps> = ({ country }) => {\n  const [covidDetail, error] = useCovidDetail(country);\n\n  if (error)\n    return (\n      <Alert variant=\"danger\" className=\"my-5\">\n        Something went wrong\n      </Alert>\n    );\n\n  if (!covidDetail) return <Spinner animation=\"border\" className=\"my-5\" />;\n\n  const {\n    country: countryName,\n    population,\n    cases,\n    deaths,\n    recovered,\n    todayCases,\n    todayDeaths,\n    todayRecovered,\n    critical,\n  } = covidDetail;\n  const title = `${countryName} Covid19 stats`;\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <Breadcrumbs\n        className=\"my-3\"\n        crumbs={[{ title: 'Covid19', url: '/features/covid-19' }, { title: countryName }]}\n      />\n      <PageHeading title={title} />\n      <Row>\n        <Col md={6}>\n          <Table striped bordered hover responsive>\n            <tbody>\n              <tr>\n                <th>Population</th>\n                <td>{formatNumber(population)}</td>\n              </tr>\n              <tr>\n                <th>Cases total</th>\n                <td>{formatNumber(cases)}</td>\n              </tr>\n              <tr>\n                <th>Deaths total</th>\n                <td>\n                  {formatNumber(deaths)} ({((deaths / cases) * 100).toFixed(2)}%)\n                </td>\n              </tr>\n              <tr>\n                <th>Recovered total</th>\n                <td>{formatNumber(recovered)}</td>\n              </tr>\n              <tr>\n                <th>Cases today</th>\n                <td>{formatNumber(todayCases)}</td>\n              </tr>\n              <tr>\n                <th>Deaths today</th>\n                <td>{formatNumber(todayDeaths)}</td>\n              </tr>\n              <tr>\n                <th>Recovered today</th>\n                <td>{formatNumber(todayRecovered)}</td>\n              </tr>\n              <tr>\n                <th>Critical</th>\n                <td>{formatNumber(critical)}</td>\n              </tr>\n            </tbody>\n          </Table>\n        </Col>\n        <Col md={6}>\n          <Chart\n            options={{\n              labels: ['Cases', 'Deaths', 'Recovered'],\n              colors: ['var(--bs-blue)', 'var(--bs-red)', 'var(--bs-green)'],\n              tooltip: {\n                y: {\n                  formatter: (val) => formatNumber(val),\n                },\n              },\n            }}\n            series={[cases, deaths, recovered]}\n            type=\"donut\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default CovidDetail;\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CovidList from '../components/covid19/CovidList';\nimport CovidDetail from '../components/covid19/CovidDetail';\n\nconst Covid19: FC = () => {\n  const { country } = useParams();\n\n  return !country ? <CovidList /> : <CovidDetail country={country} />;\n};\n\nexport default Covid19;\n","import { FC, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useRecoilState } from 'recoil';\nimport { Alert, Spinner, Form, Table } from 'react-bootstrap';\nimport { Heart, HeartFill } from 'react-bootstrap-icons';\nimport favoriteCryptoAtom from '../../state/atoms/favoriteCryptoAtom';\nimport { useCryptoList } from '../../hooks/crypto';\nimport {\n  arrSortAscByKey,\n  arrSortDescByKey,\n  arrSortStringAscByKey,\n  arrSortStringDescByKey,\n  formatPrice,\n} from '../../utils';\nimport PageMeta from '../shared/PageMeta';\nimport Breadcrumbs from '../shared/Breadcrumbs';\nimport PageHeading from '../shared/PageHeading';\nimport TableHeadingSort from '../shared/TableHeadingSort';\nimport Percent from '../shared/Percent';\n\nconst CryptoList: FC = () => {\n  const [cryptoList, setCryptoList, error] = useCryptoList();\n  const [search, setSearch] = useState('');\n  const [favoriteCrypto, setFavoriteCrypto] = useRecoilState(favoriteCryptoAtom);\n  const title = 'Crypto';\n  const iconColor = 'var(--bs-red)';\n  const iconSize = 16;\n\n  if (error)\n    return (\n      <Alert variant=\"danger\" className=\"my-5\">\n        Something went wrong\n      </Alert>\n    );\n\n  if (!cryptoList) return <Spinner animation=\"border\" className=\"my-5\" />;\n\n  const tableHeadings = [\n    { title: 'Code', key: 'CoinInfo.Name', sortByString: true },\n    { title: 'Name', key: 'CoinInfo.FullName', sortByString: true },\n    { title: 'Price', key: 'RAW.USD.PRICE' },\n    { title: '24h %', key: 'RAW.USD.CHANGEPCT24HOUR' },\n    { title: 'Market Cap', key: 'RAW.USD.MKTCAP' },\n  ];\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <Breadcrumbs crumbs={[{ title }]} />\n      <PageHeading title={title} />\n      <Form.Control\n        size=\"lg\"\n        type=\"search\"\n        placeholder=\"Search by currency...\"\n        className=\"mb-4\"\n        onChange={(e) => setSearch(e.target.value)}\n      />\n      <Table responsive striped bordered hover>\n        <thead>\n          <tr>\n            {tableHeadings.map(({ title, key, sortByString }) => (\n              <TableHeadingSort\n                key={key}\n                title={title}\n                onAsc={() =>\n                  setCryptoList([\n                    ...(sortByString ? arrSortStringAscByKey(cryptoList, key) : arrSortAscByKey(cryptoList, key)),\n                  ])\n                }\n                onDesc={() =>\n                  setCryptoList([\n                    ...(sortByString ? arrSortStringDescByKey(cryptoList, key) : arrSortDescByKey(cryptoList, key)),\n                  ])\n                }\n              />\n            ))}\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {cryptoList\n            .filter(({ CoinInfo: { FullName } }) => FullName.toLowerCase().includes(search.toLowerCase()))\n            .map(({ CoinInfo: { Name: code, ImageUrl: image, FullName: name }, RAW }) => {\n              if (!RAW?.USD) return null;\n              const { MKTCAP: marketCap, PRICE: price, CHANGEPCT24HOUR: changePct24h } = RAW.USD;\n              const isFavorite = favoriteCrypto && favoriteCrypto.code === code;\n\n              return (\n                <tr key={code}>\n                  <td>\n                    <img\n                      loading=\"lazy\"\n                      alt={name}\n                      src={`https://www.cryptocompare.com/${image}`}\n                      style={{ width: '1.3rem' }}\n                      className=\"me-2\"\n                    />\n                    {code}\n                  </td>\n                  <td>\n                    <Link to={code.toLowerCase()}>{name}</Link>\n                  </td>\n                  <td>{formatPrice(price)}</td>\n                  <td>\n                    <Percent amount={changePct24h} />\n                  </td>\n                  <td>{marketCap ? formatPrice(marketCap) : '-'}</td>\n                  <td className=\"text-center\">\n                    <span\n                      title={!isFavorite ? 'Add to Favorites' : 'Remove from Favorites'}\n                      role=\"button\"\n                      onClick={() => setFavoriteCrypto(!isFavorite ? { code, image } : null)}\n                    >\n                      {isFavorite ? (\n                        <HeartFill color={iconColor} size={iconSize} />\n                      ) : (\n                        <Heart color={iconColor} size={iconSize} />\n                      )}\n                    </span>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default CryptoList;\n","import { FC } from 'react';\nimport { Alert, Spinner, ButtonGroup, Button } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport { useCryptoDetailData, useCryptoHistory } from '../../hooks/crypto';\nimport { formatPrice } from '../../utils';\nimport config from '../../config';\nimport PageMeta from '../shared/PageMeta';\nimport Breadcrumbs from '../shared/Breadcrumbs';\nimport PageHeading from '../shared/PageHeading';\nimport Percent from '../shared/Percent';\n\ninterface CryptoDetailProps {\n  code: string;\n}\n\nconst CryptoDetail: FC<CryptoDetailProps> = ({ code }) => {\n  const cryptoCode = code.toUpperCase();\n  const {\n    features: {\n      charts: { timeframes },\n    },\n  } = config;\n\n  const cryptoDetailData = useCryptoDetailData(cryptoCode);\n  const [cryptoHistory, chartSeries, timeframe, setTimeframe, cryptoHistoryError] = useCryptoHistory(cryptoCode);\n  const loading = !cryptoDetailData || !cryptoHistory || !chartSeries;\n\n  if (cryptoHistoryError)\n    return (\n      <Alert variant=\"danger\" className=\"my-5\">\n        Something went wrong\n      </Alert>\n    );\n\n  if (loading) return <Spinner animation=\"border\" className=\"my-5\" />;\n\n  const { name, image, price, changePct24h } = cryptoDetailData;\n\n  return (\n    <>\n      <PageMeta title={name} />\n      <Breadcrumbs crumbs={[{ title: 'Crypto', url: '/features/crypto' }, { title: name }]} />\n      <PageHeading title={name} />\n      <div className=\"mb-5\">\n        <div className=\"d-flex align-items-center fs-2\">\n          <img loading=\"lazy\" alt={name} src={`https://www.cryptocompare.com/${image}`} style={{ width: '4rem' }} />\n          <strong className=\"mx-4\">{formatPrice(price)}</strong>\n          <Percent amount={changePct24h} />\n        </div>\n      </div>\n      <ButtonGroup aria-label=\"Timeframe\" className=\"mb-5\">\n        {timeframes.map((item) => (\n          <Button\n            key={item.title}\n            variant={item === timeframe ? 'primary' : 'secondary'}\n            onClick={() => {\n              setTimeframe(item);\n            }}\n          >\n            {item.title}\n          </Button>\n        ))}\n      </ButtonGroup>\n      <Chart\n        options={{\n          chart: {\n            type: 'candlestick',\n            animations: {\n              enabled: false,\n            },\n            toolbar: {\n              tools: {\n                zoom: false,\n                zoomin: false,\n                zoomout: false,\n                selection: false,\n                pan: false,\n                reset: false,\n              },\n            },\n          },\n          title: {\n            text: `${cryptoCode} / USD Price Chart`,\n            align: 'left',\n          },\n          xaxis: {\n            type: 'datetime',\n          },\n          yaxis: {\n            tooltip: {\n              enabled: true,\n            },\n          },\n        }}\n        series={chartSeries}\n        type=\"candlestick\"\n        height={350}\n      />\n    </>\n  );\n};\n\nexport default CryptoDetail;\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CryptoList from '../components/crypto/CryptoList';\nimport CryptoDetail from '../components/crypto/CryptoDetail';\n\nconst Crypto: FC = () => {\n  const { code } = useParams();\n\n  return !code ? <CryptoList /> : <CryptoDetail code={code} />;\n};\n\nexport default Crypto;\n","import { FC, useState, Suspense, lazy } from 'react';\nimport { Button, Spinner, Row, Col, Card } from 'react-bootstrap';\nimport PageMeta from '../components/shared/PageMeta';\nimport Breadcrumbs from '../components/shared/Breadcrumbs';\nimport PageHeading from '../components/shared/PageHeading';\nimport Socials from '../components/shared/Socials';\nconst ContactDetails = lazy(() => import('../components/ContactDetails'));\n\nconst Contact: FC = () => {\n  const [contact, setContact] = useState(false);\n  const content = contact ? (\n    <ContactDetails />\n  ) : (\n    <Button className=\"mt-2 mb-4\" size=\"lg\" onClick={() => setContact(true)}>\n      Show contact information\n    </Button>\n  );\n  const title = 'Contact';\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <Breadcrumbs crumbs={[{ title }]} />\n      <PageHeading title={title} />\n      <Row>\n        <Col md={6}>\n          <Card>\n            <Card.Header>Contact information</Card.Header>\n            <Card.Body>\n              <Suspense fallback={<Spinner animation=\"border\" />}>{content}</Suspense>\n              <Socials variant=\"content\" color=\"var(--bs-blue)\" />\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Contact;\n","import { FC } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { RecoilRoot } from 'recoil';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Favorites from './components/Favorites';\nimport Home from './views/Home';\nimport Experience from './views/Experience';\nimport Projects from './views/Projects';\nimport Covid19 from './views/Covid19';\nimport Crypto from './views/Crypto';\nimport Contact from './views/Contact';\n\nconst App: FC = () => {\n  return (\n    <RecoilRoot>\n      <Router>\n        <div className=\"sticky-top\">\n          <Header />\n          <Favorites />\n        </div>\n        <Container className=\"pb-5\">\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/experience\" element={<Experience />} />\n            <Route path=\"/projects\" element={<Projects />} />\n            <Route path=\"/features/covid-19\" element={<Covid19 />} />\n            <Route path=\"/features/covid-19/:country\" element={<Covid19 />} />\n            <Route path=\"/features/crypto\" element={<Crypto />} />\n            <Route path=\"/features/crypto/:code\" element={<Crypto />} />\n            <Route path=\"/contact\" element={<Contact />} />\n          </Routes>\n        </Container>\n      </Router>\n    </RecoilRoot>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const nav = [\n  {\n    title: 'Experience',\n    url: '/experience',\n  },\n  {\n    title: 'Projects',\n    url: '/projects',\n  },\n  {\n    title: 'Features',\n    url: '/features',\n    children: [\n      { title: 'Covid 19', url: '/features/covid-19' },\n      { title: 'Crypto', url: '/features/crypto' },\n    ],\n  },\n  {\n    title: 'Contact',\n    url: '/contact',\n  },\n];\n\nexport default nav;\n","import nav from './nav';\nimport skillset from './skillset';\nimport experience from './experience';\nimport projects from './projects';\nimport features from './features';\n\nconst config = {\n  brand: 'CV',\n  socials: {\n    github:\n      '&#x68;&#x74;&#x74;&#x70;&#x73;&#x3A;&#x2F;&#x2F;&#x67;&#x69;&#x74;&#x68;&#x75;&#x62;&#x2E;&#x63;&#x6F;&#x6D;&#x2F;&#x6A;&#x75;&#x72;&#x69;&#x6B;&#x6F;&#x73;',\n    linkedin:\n      '&#x68;&#x74;&#x74;&#x70;&#x73;&#x3A;&#x2F;&#x2F;&#x77;&#x77;&#x77;&#x2E;&#x6C;&#x69;&#x6E;&#x6B;&#x65;&#x64;&#x69;&#x6E;&#x2E;&#x63;&#x6F;&#x6D;&#x2F;&#x69;&#x6E;&#x2F;&#x6A;&#x75;&#x72;&#x69;&#x6B;&#x6F;&#x73;',\n  },\n  contact: {\n    email:\n      '&#x6A;&#x75;&#x72;&#x69;&period;&#x6B;&#x6F;&#x73;&#x74;&#x6A;&#x75;&#x6E;&#x69;&#x6E;&commat;&#x67;&#x6D;&#x61;&#x69;&#x6C;&period;&#x63;&#x6F;&#x6D;',\n    phone: '&plus;&#x33;&#x37;&#x32;&#x20;&#x35;&#x32;&#x37;&#x36;&#x20;&#x36;&#x30;&#x34;',\n  },\n  nav,\n  skillset,\n  experience,\n  projects,\n  features,\n};\n\nexport default config;\n","const skillset = [\n  {\n    title: 'Frontend',\n    items: [\n      'JavaScript / TypeScript',\n      'REST API, GraphQL',\n      'React, React Native',\n      'Redux, Recoil, Context',\n      'Jest',\n      'Vue.js',\n      'Svelte',\n      'HTML, CSS, Sass',\n      'Bootstrap, Material UI',\n    ],\n  },\n  {\n    title: 'Backend / DevOps',\n    items: ['Node.js', 'Python', 'PHP', 'Docker', 'MySQL', 'MongoDB', 'AWS', 'Vercel'],\n  },\n  {\n    title: 'UX / UI',\n    items: ['Figma', 'Sketch', 'Invision', 'Material Design', 'Photoshop', 'Illustrator'],\n  },\n  {\n    title: 'Frameworks / Platforms',\n    items: ['Next.js', 'Magento 2', 'Magento PWA Studio', 'WordPress'],\n  },\n  {\n    title: 'Methodologies / Processes',\n    items: ['Test-driven development', 'Agile', 'Scrum', 'Kanban'],\n  },\n  {\n    title: 'Other',\n    items: ['Leadership', 'Project management', 'eCommerce', 'Technical analysis (finance)'],\n  },\n];\n\nexport default skillset;\n","const experience = [\n  {\n    company: 'Onpolar OÜ',\n    website: 'https://www.onpolar.com',\n    role: 'React Frontend Developer',\n    date: 'Jun 2021 - Present',\n    description: 'React / TypeScript development, Day-to-Day Business Management',\n    projects: [\n      'External consultant (NDA)',\n      'iPharma',\n      'Commercium7',\n      'Doctor.ee',\n      'Token.ee',\n      'Logistar',\n      'KES',\n      'Onpolar',\n    ],\n  },\n  {\n    company: 'Vaimo OÜ',\n    role: 'Magento Frontend Developer',\n    website: 'https://www.vaimo.com',\n    date: 'Dec 2011 - Jun 2021',\n    description:\n      'Magento Frontend development, UX Design, SEO Improvements, Consulting, Maintenance. Massive and smaller projects. Passed Magento Front End Developer Certification exam.',\n    projects: ['HellyHansen', 'Kaubamaja', 'Selver', 'Konga', 'Pavers', 'Bauhaus'],\n  },\n  {\n    company: 'Salespoint OÜ',\n    role: 'Frontend Developer',\n    date: 'Jan 2010 - Dec 2011',\n    description: 'Project management, ux design, html/css/js coding, seo, copywriting, internet marketing',\n  },\n  {\n    company: 'Exact Holdings OÜ',\n    role: 'HTML / CSS Coder',\n    date: 'Jun 2008 - Jan 2010',\n    description: 'HTML / CSS / jQuery coding and web design',\n  },\n];\n\nexport default experience;\n","const projects = [\n  {\n    title: 'Ipharma',\n    description: 'iPharma eCommerce PWA',\n    url: 'https://www.ipharma.ee',\n    stack: ['Magento 2', 'Magento PWA Studio', 'React', 'AWS'],\n  },\n  {\n    title: 'Doctor.ee',\n    description: 'Doctor.ee Web App',\n    url: 'https://www.doctor.ee',\n    stack: ['React', 'Next.js', 'Material UI', 'Vercel'],\n  },\n  {\n    title: 'Token.ee',\n    description: 'Token.ee Web App',\n    url: 'https://www.token.ee',\n    stack: ['React', 'Redux', 'Bootstrap', 'Vercel'],\n  },\n  {\n    title: 'Commercium7',\n    description: 'Commercium7 Website',\n    url: 'https://www.commercium7.com',\n    stack: ['React', 'Recoil', 'Next.js', 'Vercel'],\n  },\n  {\n    title: 'Onpolar',\n    description: 'Onpolar Website',\n    url: 'https://www.onpolar.com',\n    stack: ['React', 'Next.js', 'Vercel'],\n  },\n  { title: 'KES', description: 'KES Website', url: 'https://www.kolomna.ee', stack: ['React', 'Next.js', 'Vercel'] },\n  {\n    title: 'Logistar',\n    description: 'Logistar Website',\n    url: 'https://www.logistar.ee',\n    stack: ['React', 'Next.js', 'Vercel'],\n  },\n];\n\nexport default projects;\n","const features = {\n  charts: {\n    timeframes: [\n      {\n        title: '1 Month',\n        limit: 30,\n        aggregate: 1,\n      },\n      {\n        title: '1 Year',\n        limit: 30 * 12,\n        aggregate: 1,\n      },\n      {\n        title: '3 Years',\n        limit: 30 * (12 * 3),\n        aggregate: 1,\n      },\n      {\n        title: '5 Years',\n        limit: 30 * (12 * 5),\n        aggregate: 1,\n      },\n    ],\n  },\n  covid19: {\n    endpoint: 'https://disease.sh/v3',\n  },\n  crypto: {\n    endpoint: 'https://min-api.cryptocompare.com/data',\n  },\n};\n\nexport default features;\n"],"sourceRoot":""}