{"version":3,"sources":["config/nav.ts","config/index.ts","config/skillset.ts","config/experience.ts","config/projects.ts","config/features.ts","models/crypto.ts","components/shared/Socials.tsx","components/Header.tsx","components/shared/PageMeta.tsx","components/shared/PageHeading.tsx","views/Home.tsx","utils/index.ts","views/Experience.tsx","views/Projects.tsx","components/shared/Breadcrumbs.tsx","components/shared/TableHeadingSort.tsx","components/covid19/CovidList.tsx","hooks/covid19.tsx","components/covid19/CovidDetail.tsx","views/Covid19.tsx","hooks/crypto.tsx","components/shared/Percent.tsx","components/crypto/CryptoList.tsx","components/crypto/CryptoDetail.tsx","views/Crypto.tsx","views/Contact.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["config","brand","socials","github","linkedin","contact","email","phone","nav","title","url","children","skillset","items","experience","company","website","role","date","description","projects","stack","features","charts","timeframes","limit","aggregate","covid19","endpoint","crypto","CryptoApiStatusEnum","Socials","variant","color","rootClassName","classNames","linkClassName","className","href","decode","target","rel","size","Header","pathname","useLocation","Navbar","bg","expand","Container","Brand","to","as","Link","Toggle","aria-controls","Collapse","id","Nav","map","NavDropdown","active","includes","Item","PageMeta","Helmet","name","content","PageHeading","Home","navigate","useNavigate","Row","Col","lg","Button","onClick","md","Card","style","height","Body","Title","Text","item","fetcher","fetch","then","r","json","removeProtocolFromUrl","replace","formatPrice","price","locale","currency","Intl","NumberFormat","maximumFractionDigits","format","formatNumber","number","arrSortAscByKey","arr","key","sort","a","b","_get","arrSortDescByKey","arrSortStringAscByKey","localeCompare","arrSortStringDescByKey","Experience","Accordion","defaultActiveKey","i","eventKey","Badge","length","project","Projects","Breadcrumbs","crumbs","Breadcrumb","TableHeadingSort","onAsc","onDesc","iconSize","CovidList","useState","covidList","setCovidList","useSWR","revalidateOnFocus","data","error","useEffect","useCovidList","search","setSearch","Alert","Spinner","animation","Form","Control","type","placeholder","onChange","e","value","Table","responsive","striped","bordered","hover","sortByString","filter","country","toLowerCase","todayCases","cases","todayDeaths","deaths","flag","countryInfo","loading","width","alt","src","CovidDetail","covidDetail","setCovidDetail","useCovidDetail","countryName","population","recovered","todayRecovered","critical","toFixed","options","labels","colors","tooltip","y","formatter","val","series","Covid19","useParams","useCryptoList","cryptoList","setCryptoList","responseError","setResponseError","Message","Data","Success","Percent","amount","pctClassName","CryptoList","CoinInfo","FullName","code","Name","image","ImageUrl","RAW","USD","marketCap","MKTCAP","PRICE","changePct24h","CHANGEPCT24HOUR","CryptoDetail","cryptoCode","toUpperCase","cryptoListError","undefined","cryptoHistory","setCryptoHistory","timeframe","setTimeframe","chartSeries","setChartSeries","Response","x","time","open","high","low","close","useCryptoHistory","cryptoHistoryError","cryptoDetailData","find","ButtonGroup","aria-label","chart","animations","enabled","toolbar","tools","zoom","zoomin","zoomout","selection","pan","reset","text","align","xaxis","yaxis","Crypto","ContactDetails","lazy","Contact","setContact","fallback","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f73cb757.chunk.js","sourcesContent":["const nav = [\n  {\n    title: 'Experience',\n    url: '/experience',\n  },\n  {\n    title: 'Projects',\n    url: '/projects',\n  },\n  {\n    title: 'Features',\n    url: '/features',\n    children: [\n      { title: 'Covid 19', url: '/features/covid-19' },\n      { title: 'Crypto', url: '/features/crypto' },\n    ],\n  },\n  {\n    title: 'Contact',\n    url: '/contact',\n  },\n];\n\nexport default nav;\n","import nav from './nav';\nimport skillset from './skillset';\nimport experience from './experience';\nimport projects from './projects';\nimport features from './features';\n\nconst config = {\n  brand: 'CV',\n  socials: {\n    github:\n      '&#x68;&#x74;&#x74;&#x70;&#x73;&#x3A;&#x2F;&#x2F;&#x67;&#x69;&#x74;&#x68;&#x75;&#x62;&#x2E;&#x63;&#x6F;&#x6D;&#x2F;&#x6A;&#x75;&#x72;&#x69;&#x6B;&#x6F;&#x73;',\n    linkedin:\n      '&#x68;&#x74;&#x74;&#x70;&#x73;&#x3A;&#x2F;&#x2F;&#x77;&#x77;&#x77;&#x2E;&#x6C;&#x69;&#x6E;&#x6B;&#x65;&#x64;&#x69;&#x6E;&#x2E;&#x63;&#x6F;&#x6D;&#x2F;&#x69;&#x6E;&#x2F;&#x6A;&#x75;&#x72;&#x69;&#x6B;&#x6F;&#x73;',\n  },\n  contact: {\n    email:\n      '&#x6A;&#x75;&#x72;&#x69;&period;&#x6B;&#x6F;&#x73;&#x74;&#x6A;&#x75;&#x6E;&#x69;&#x6E;&commat;&#x67;&#x6D;&#x61;&#x69;&#x6C;&period;&#x63;&#x6F;&#x6D;',\n    phone: '&plus;&#x33;&#x37;&#x32;&#x20;&#x35;&#x32;&#x37;&#x36;&#x20;&#x36;&#x30;&#x34;',\n  },\n  nav,\n  skillset,\n  experience,\n  projects,\n  features,\n};\n\nexport default config;\n","const skillset = [\n  {\n    title: 'Frontend',\n    items: [\n      'JavaScript / TypeScript',\n      'REST API, GraphQL',\n      'React, React Native',\n      'Redux, Recoil, Context',\n      'Jest',\n      'Vue.js',\n      'Svelte',\n      'HTML, CSS, Sass',\n      'Bootstrap, Material UI',\n    ],\n  },\n  {\n    title: 'Backend / DevOps',\n    items: ['Node.js', 'Python', 'PHP', 'Docker', 'MySQL', 'MongoDB', 'AWS', 'Vercel'],\n  },\n  {\n    title: 'UX / UI',\n    items: ['Figma', 'Sketch', 'Invision', 'Material Design', 'Photoshop', 'Illustrator'],\n  },\n  {\n    title: 'Frameworks / Platforms',\n    items: ['Next.js', 'Magento 2', 'Magento PWA Studio', 'WordPress'],\n  },\n  {\n    title: 'Methodologies / Processes',\n    items: ['Test-driven development', 'Agile', 'Scrum', 'Kanban'],\n  },\n  {\n    title: 'Other',\n    items: ['Leadership', 'Project management', 'eCommerce', 'Technical analysis (finance)'],\n  },\n];\n\nexport default skillset;\n","const experience = [\n  {\n    company: 'Onpolar OÜ',\n    website: 'https://www.onpolar.com',\n    role: 'React Frontend Developer',\n    date: 'Jun 2021 - Present',\n    description: 'React / TypeScript development, Day-to-Day Business Management',\n    projects: [\n      'External consultant (NDA)',\n      'iPharma',\n      'Commercium7',\n      'Doctor.ee',\n      'Token.ee',\n      'Logistar',\n      'KES',\n      'Onpolar',\n    ],\n  },\n  {\n    company: 'Vaimo OÜ',\n    role: 'Magento Frontend Developer',\n    website: 'https://www.vaimo.com',\n    date: 'Dec 2011 - Jun 2021',\n    description:\n      'Magento Frontend development, UX Design, SEO Improvements, Consulting, Maintenance. Massive and smaller projects. Passed Magento Front End Developer Certification exam.',\n    projects: ['HellyHansen', 'Kaubamaja', 'Selver', 'Konga', 'Pavers', 'Bauhaus'],\n  },\n  {\n    company: 'Salespoint OÜ',\n    role: 'Frontend Developer',\n    date: 'Jan 2010 - Dec 2011',\n    description: 'Project management, ux design, html/css/js coding, seo, copywriting, internet marketing',\n  },\n  {\n    company: 'Exact Holdings OÜ',\n    role: 'HTML / CSS Coder',\n    date: 'Jun 2008 - Jan 2010',\n    description: 'HTML / CSS / jQuery coding and web design',\n  },\n];\n\nexport default experience;\n","const projects = [\n  {\n    title: 'Ipharma',\n    description: 'iPharma eCommerce PWA',\n    url: 'https://www.ipharma.ee',\n    stack: ['Magento 2', 'Magento PWA Studio', 'React', 'AWS'],\n  },\n  {\n    title: 'Doctor.ee',\n    description: 'Doctor.ee Web App',\n    url: 'https://www.doctor.ee',\n    stack: ['React', 'Next.js', 'Material UI', 'Vercel'],\n  },\n  {\n    title: 'Token.ee',\n    description: 'Token.ee Web App',\n    url: 'https://www.token.ee',\n    stack: ['React', 'Redux', 'Bootstrap', 'Vercel'],\n  },\n  {\n    title: 'Commercium7',\n    description: 'Commercium7 Website',\n    url: 'https://www.commercium7.com',\n    stack: ['React', 'Recoil', 'Next.js', 'Vercel'],\n  },\n  {\n    title: 'Onpolar',\n    description: 'Onpolar Website',\n    url: 'https://www.onpolar.com',\n    stack: ['React', 'Next.js', 'Vercel'],\n  },\n  { title: 'KES', description: 'KES Website', url: 'https://www.kolomna.ee', stack: ['React', 'Next.js', 'Vercel'] },\n  {\n    title: 'Logistar',\n    description: 'Logistar Website',\n    url: 'https://www.logistar.ee',\n    stack: ['React', 'Next.js', 'Vercel'],\n  },\n];\n\nexport default projects;\n","const features = {\n  charts: {\n    timeframes: [\n      {\n        title: '1 Month',\n        limit: 30,\n        aggregate: 1,\n      },\n      {\n        title: '1 Year',\n        limit: 30 * 12,\n        aggregate: 1,\n      },\n      {\n        title: '3 Years',\n        limit: 30 * (12 * 3),\n        aggregate: 1,\n      },\n      {\n        title: '5 Years',\n        limit: 30 * (12 * 5),\n        aggregate: 1,\n      },\n    ],\n  },\n  covid19: {\n    endpoint: 'https://disease.sh/v3',\n  },\n  crypto: {\n    endpoint: 'https://min-api.cryptocompare.com/data',\n  },\n};\n\nexport default features;\n","export enum CryptoApiStatusEnum {\n  Success = 'Success',\n  Error = 'Error',\n}\n\ninterface CoinInfoModel {\n  Name: string;\n  FullName: string;\n  ImageUrl: string;\n  MaxSupply: number;\n}\n\ninterface PriceDataModel {\n  PRICE: number;\n  CHANGEPCT24HOUR: number;\n  SUPPLY: number;\n  MKTCAP: number;\n}\n\nexport interface CryptoHistoryDataModel {\n  close: number;\n  high: number;\n  low: number;\n  open: number;\n  time: number;\n}\n\nexport interface CryptoListDataModel {\n  CoinInfo: CoinInfoModel;\n  RAW: { USD: PriceDataModel };\n}\n\nexport interface CryptoListModel {\n  Data: CryptoListDataModel[];\n  Message: string;\n}\n\nexport interface CryptoHistoryModel {\n  Data: CryptoHistoryDataModel[];\n  Response: CryptoApiStatusEnum;\n}\n","import { FC } from 'react';\nimport { Github, Linkedin } from 'react-bootstrap-icons';\nimport classNames from 'classnames';\nimport { decode } from 'html-entities';\nimport config from '../../config';\n\ninterface SocialsProps {\n  variant?: 'headerSm' | 'headerLg' | 'content';\n  color: string;\n}\n\nconst Socials: FC<SocialsProps> = ({ variant, color }) => {\n  const {\n    socials: { github, linkedin },\n  } = config;\n  const rootClassName = classNames({\n    'd-lg-none my-2': variant === 'headerSm',\n    'ml-auto d-none d-lg-block': variant === 'headerLg',\n  });\n  const linkClassName = classNames({\n    'me-4': variant === 'headerSm' || variant === 'content',\n    'ms-4': variant === 'headerLg',\n  });\n\n  return (\n    <div className={rootClassName}>\n      <a className={linkClassName} href={decode(github)} target=\"_blank\" rel=\"noreferrer\">\n        <Github color={color} size={24} />\n      </a>\n      <a className={linkClassName} href={decode(linkedin)} target=\"_blank\" rel=\"noreferrer\">\n        <Linkedin color={color} size={24} />\n      </a>\n    </div>\n  );\n};\n\nexport default Socials;\n","import { FC, Fragment } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\nimport Socials from './shared/Socials';\nimport config from '../config';\n\nconst Header: FC = () => {\n  const { brand, nav } = config;\n  const { pathname } = useLocation();\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Container>\n        <Navbar.Brand to=\"/\" as={Link}>\n          {brand}\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"navbar-nav\" />\n        <Navbar.Collapse id=\"navbar-nav\">\n          <Nav>\n            {nav.map(({ title, url, children }) => (\n              <Fragment key={title}>\n                {!children ? (\n                  <Nav.Link to={url} as={Link} active={pathname === url}>\n                    {title}\n                  </Nav.Link>\n                ) : (\n                  <NavDropdown title={title} id=\"nav-dropdown\" active={pathname.includes(url)}>\n                    {children.map(({ title, url }) => (\n                      <NavDropdown.Item key={title} to={url} as={Link} active={pathname === url}>\n                        {title}\n                      </NavDropdown.Item>\n                    ))}\n                  </NavDropdown>\n                )}\n              </Fragment>\n            ))}\n          </Nav>\n          <Socials variant=\"headerSm\" color=\"white\" />\n        </Navbar.Collapse>\n        <Socials variant=\"headerLg\" color=\"white\" />\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import { FC } from 'react';\nimport { Helmet } from 'react-helmet';\nimport config from '../../config';\n\ninterface PageMetaProps {\n  title?: string;\n  description?: string;\n}\n\nconst PageMeta: FC<PageMetaProps> = ({ title, description }) => (\n  <Helmet>\n    {title && (\n      <title>\n        {title} | {config.brand}\n      </title>\n    )}\n    {description && <meta name=\"description\" content={description} />}\n  </Helmet>\n);\n\nexport default PageMeta;\n","import { FC } from 'react';\n\ninterface PageHeadingProps {\n  title: string;\n}\n\nconst PageHeading: FC<PageHeadingProps> = ({ title }) => <h1 className=\"display-5 fw-bold my-5\">{title}</h1>;\n\nexport default PageHeading;\n","import { FC } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Row, Col, Button, Card } from 'react-bootstrap';\nimport config from '../config';\nimport PageMeta from '../components/shared/PageMeta';\nimport PageHeading from '../components/shared/PageHeading';\n\nconst Home: FC = () => {\n  const navigate = useNavigate();\n  const { skillset } = config;\n\n  return (\n    <>\n      <PageMeta title=\"Home\" />\n      <Row className=\"my-5\">\n        <Col lg={6} className=\"mx-auto text-center\">\n          <PageHeading title=\"React Frontend Developer\" />\n          <p className=\"lead mb-3\">\n            Senior Frontend Web &amp; Mobile developer with a strong focus on performance optimisation, clean code and\n            passion to UX.\n          </p>\n          <Button size=\"lg\" variant=\"primary\" className=\"m-2\" onClick={() => navigate('/experience')}>\n            Experience\n          </Button>\n          <Button size=\"lg\" variant=\"outline-secondary\" className=\"m-2\" onClick={() => navigate('/projects')}>\n            Projects\n          </Button>\n        </Col>\n      </Row>\n      <h2>Skillset</h2>\n      <Row>\n        {skillset.map(({ title, items }) => (\n          <Col key={title} md={6} lg={4} className=\"mt-4\">\n            <Card style={{ height: '100%' }}>\n              <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <Card.Text as=\"div\">\n                  <ul>\n                    {items.map((item) => (\n                      <li key={item}>{item}</li>\n                    ))}\n                  </ul>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Home;\n","import { get as _get } from 'lodash';\n\nexport const fetcher = (url: string) => fetch(url).then((r) => r.json());\n\nexport const removeProtocolFromUrl = (url: string) => url.replace(/(^\\w+:|^)\\/\\//, '');\n\nexport const formatPrice = (price: number, locale = 'en', currency = 'USD'): string =>\n  new Intl.NumberFormat(locale, { style: 'currency', currency, maximumFractionDigits: 4 }).format(price);\n\nexport const formatNumber = (number: number, locale = 'en'): string => new Intl.NumberFormat(locale).format(number);\n\nexport const arrSortAscByKey = (arr: any[], key: string) => arr.sort((a, b) => _get(b, key) - _get(a, key));\n\nexport const arrSortDescByKey = (arr: any[], key: string) => arr.sort((a, b) => _get(a, key) - _get(b, key));\n\nexport const arrSortStringAscByKey = (arr: any[], key: string) =>\n  arr.sort((a, b) => _get(a, key).localeCompare(_get(b, key)));\n\nexport const arrSortStringDescByKey = (arr: any[], key: string) =>\n  arr.sort((a, b) => _get(b, key).localeCompare(_get(a, key)));\n","import { FC } from 'react';\nimport { Accordion, Badge, Button } from 'react-bootstrap';\nimport { removeProtocolFromUrl } from '../utils';\nimport config from '../config';\nimport PageMeta from '../components/shared/PageMeta';\nimport PageHeading from '../components/shared/PageHeading';\n\nconst Experience: FC = () => {\n  const { experience } = config;\n  const title = 'Experience';\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <PageHeading title={title} />\n      <Accordion defaultActiveKey=\"0\">\n        {experience.map(({ company, website, role, date, description, projects }, i) => (\n          <Accordion.Item eventKey={`${i}`} key={date}>\n            <Accordion.Header>{role}</Accordion.Header>\n            <Accordion.Body>\n              <Badge bg=\"secondary\">{date}</Badge>\n              <h2 className=\"display-8 mt-2\">{company}</h2>\n              {website && (\n                <Button href={website} size=\"sm\" variant=\"outline-primary\" target=\"_blank\">\n                  {removeProtocolFromUrl(website)}\n                </Button>\n              )}\n              {description && <p className=\"mt-4 mb-0\">{description}</p>}\n              {projects?.length && (\n                <>\n                  <h3 className=\"fs-4 text-secondary mt-4\">Projects</h3>\n                  <ul>\n                    {projects.map((project) => (\n                      <li key={project}>{project}</li>\n                    ))}\n                  </ul>\n                </>\n              )}\n            </Accordion.Body>\n          </Accordion.Item>\n        ))}\n      </Accordion>\n    </>\n  );\n};\n\nexport default Experience;\n","import { FC } from 'react';\nimport { Row, Col, Button, Card, Badge } from 'react-bootstrap';\nimport { removeProtocolFromUrl } from '../utils';\nimport config from '../config';\nimport PageMeta from '../components/shared/PageMeta';\nimport PageHeading from '../components/shared/PageHeading';\n\nconst Projects: FC = () => {\n  const { projects } = config;\n  const title = 'Projects';\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <PageHeading title={title} />\n      <Row>\n        {projects.map(({ title, description, url, stack }) => (\n          <Col key={title} md={6} lg={4} className=\"mb-4\">\n            <Card style={{ height: '100%' }}>\n              <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <Card.Text>{description}</Card.Text>\n                {url && (\n                  <Button variant=\"primary\" href={url} target=\"_blank\">\n                    {removeProtocolFromUrl(url)}\n                  </Button>\n                )}\n                {stack && (\n                  <div className=\"mt-3\">\n                    {stack.map((item) => (\n                      <Badge key={item} bg=\"secondary\" className=\"mt-2 me-2\">\n                        {item}\n                      </Badge>\n                    ))}\n                  </div>\n                )}\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Projects;\n","import { FC, Fragment } from 'react';\nimport { Breadcrumb } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\ninterface BreadcrumbsProps {\n  crumbs: { title: string; url?: string }[];\n  className?: string;\n}\n\nconst Breadcrumbs: FC<BreadcrumbsProps> = ({ crumbs, className }) => (\n  <Breadcrumb className={className}>\n    <LinkContainer to=\"/\">\n      <Breadcrumb.Item>Home</Breadcrumb.Item>\n    </LinkContainer>\n    {crumbs.map(({ title, url }) => (\n      <Fragment key={title}>\n        {url ? (\n          <LinkContainer to={url}>\n            <Breadcrumb.Item>{title}</Breadcrumb.Item>\n          </LinkContainer>\n        ) : (\n          <Breadcrumb.Item active>{title}</Breadcrumb.Item>\n        )}\n      </Fragment>\n    ))}\n  </Breadcrumb>\n);\n\nexport default Breadcrumbs;\n","import { FC } from 'react';\nimport { ArrowUpShort, ArrowDownShort } from 'react-bootstrap-icons';\n\ninterface TableHeadingSortProps {\n  title: string;\n  onAsc: () => void;\n  onDesc: () => void;\n  iconSize?: number;\n}\n\nconst TableHeadingSort: FC<TableHeadingSortProps> = ({ title, onAsc, onDesc, iconSize = 16 }) => (\n  <th>\n    <div className=\"d-flex justify-content-between\">\n      {title}\n      <div>\n        <ArrowUpShort size={iconSize} role=\"button\" onClick={onAsc} />\n        <ArrowDownShort size={iconSize} role=\"button\" onClick={onDesc} />\n      </div>\n    </div>\n  </th>\n);\n\nexport default TableHeadingSort;\n","import { FC, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Alert, Spinner, Form, Table } from 'react-bootstrap';\nimport { useCovidList } from '../../hooks/covid19';\nimport {\n  arrSortAscByKey,\n  arrSortDescByKey,\n  arrSortStringAscByKey,\n  arrSortStringDescByKey,\n  formatNumber,\n} from '../../utils';\nimport PageMeta from '../shared/PageMeta';\nimport Breadcrumbs from '../shared/Breadcrumbs';\nimport PageHeading from '../shared/PageHeading';\nimport TableHeadingSort from '../shared/TableHeadingSort';\n\nconst CovidList: FC = () => {\n  const [covidList, setCovidList, error] = useCovidList();\n  const [search, setSearch] = useState('');\n  const title = 'Covid19';\n\n  if (error)\n    return (\n      <Alert variant=\"danger\" className=\"my-5\">\n        Something went wrong\n      </Alert>\n    );\n\n  if (!covidList) return <Spinner animation=\"border\" className=\"my-5\" />;\n\n  const tableHeadings = [\n    { title: 'Country', key: 'country', sortByString: true },\n    { title: 'Cases today', key: 'todayCases' },\n    { title: 'Cases total', key: 'cases' },\n    { title: 'Deaths today', key: 'todayDeaths' },\n    { title: 'Deaths total', key: 'deaths' },\n  ];\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <Breadcrumbs className=\"my-3\" crumbs={[{ title: 'Covid19' }]} />\n      <PageHeading title={title} />\n      <Form.Control\n        size=\"lg\"\n        type=\"search\"\n        placeholder=\"Search by country...\"\n        className=\"mb-4\"\n        onChange={(e) => setSearch(e.target.value)}\n      />\n      <Table responsive striped bordered hover>\n        <thead>\n          <tr>\n            {tableHeadings.map(({ title, key, sortByString }) => (\n              <TableHeadingSort\n                key={key}\n                title={title}\n                onAsc={() =>\n                  setCovidList([\n                    ...(sortByString ? arrSortStringAscByKey(covidList, key) : arrSortAscByKey(covidList, key)),\n                  ])\n                }\n                onDesc={() =>\n                  setCovidList([\n                    ...(sortByString ? arrSortStringDescByKey(covidList, key) : arrSortDescByKey(covidList, key)),\n                  ])\n                }\n              />\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {covidList\n            .filter(({ country }) => country.toLowerCase().includes(search.toLowerCase()))\n            .map(({ country, todayCases, cases, todayDeaths, deaths, countryInfo: { flag } }) => (\n              <tr key={country}>\n                <td>\n                  <img loading=\"lazy\" style={{ width: '1rem' }} alt={country} src={flag} />{' '}\n                  <Link to={country.toLowerCase()}>{country}</Link>\n                </td>\n                <td>{todayCases > 0 ? <strong>{formatNumber(todayCases)}</strong> : formatNumber(todayCases)}</td>\n                <td>{formatNumber(cases)}</td>\n                <td>\n                  {todayDeaths > 0 ? (\n                    <strong className=\"text-danger\">{formatNumber(todayDeaths)}</strong>\n                  ) : (\n                    formatNumber(todayDeaths)\n                  )}\n                </td>\n                <td>{deaths > 0 ? <strong>{formatNumber(deaths)}</strong> : formatNumber(deaths)}</td>\n              </tr>\n            ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default CovidList;\n","import { useEffect, useState, Dispatch, SetStateAction } from 'react';\nimport useSWR from 'swr';\nimport { CountryModel } from '../models/covid19';\nimport { fetcher } from '../utils';\nimport config from '../config';\n\n// TODO: change when swr properly types error response\ntype Error = any;\n\nexport const useCovidList = (): [\n  CountryModel[] | undefined,\n  Dispatch<SetStateAction<CountryModel[] | undefined>>,\n  Error,\n] => {\n  const {\n    features: {\n      covid19: { endpoint },\n    },\n  } = config;\n  const [covidList, setCovidList] = useState<CountryModel[] | undefined>();\n  const { data, error } = useSWR<CountryModel[]>(`${endpoint}/covid-19/countries`, fetcher, {\n    revalidateOnFocus: false,\n  });\n\n  useEffect(() => {\n    if (data) setCovidList(data);\n  }, [data]);\n\n  return [covidList, setCovidList, error];\n};\n\nexport const useCovidDetail = (country: string): [CountryModel | undefined, Error] => {\n  const {\n    features: {\n      covid19: { endpoint },\n    },\n  } = config;\n  const [covidDetail, setCovidDetail] = useState<CountryModel | undefined>();\n  const { data, error } = useSWR<CountryModel>(`${endpoint}/covid-19/countries/${country}`, fetcher, {\n    revalidateOnFocus: false,\n  });\n\n  useEffect(() => {\n    if (data) setCovidDetail(data);\n  }, [data]);\n\n  return [covidDetail, error];\n};\n","import { FC } from 'react';\nimport { Alert, Spinner, Row, Col, Table } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport { useCovidDetail } from '../../hooks/covid19';\nimport { formatNumber } from '../../utils';\nimport PageMeta from '../shared/PageMeta';\nimport Breadcrumbs from '../shared/Breadcrumbs';\nimport PageHeading from '../shared/PageHeading';\n\ninterface CovidDetailProps {\n  country: string;\n}\n\nconst CovidDetail: FC<CovidDetailProps> = ({ country }) => {\n  const [covidDetail, error] = useCovidDetail(country);\n\n  if (error)\n    return (\n      <Alert variant=\"danger\" className=\"my-5\">\n        Something went wrong\n      </Alert>\n    );\n\n  if (!covidDetail) return <Spinner animation=\"border\" className=\"my-5\" />;\n\n  const {\n    country: countryName,\n    population,\n    cases,\n    deaths,\n    recovered,\n    todayCases,\n    todayDeaths,\n    todayRecovered,\n    critical,\n  } = covidDetail;\n  const title = `${countryName} Covid19 stats`;\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <Breadcrumbs\n        className=\"my-3\"\n        crumbs={[{ title: 'Covid19', url: '/features/covid-19' }, { title: countryName }]}\n      />\n      <PageHeading title={title} />\n      <Row>\n        <Col md={6}>\n          <Table striped bordered hover responsive>\n            <tbody>\n              <tr>\n                <th>Population</th>\n                <td>{formatNumber(population)}</td>\n              </tr>\n              <tr>\n                <th>Cases total</th>\n                <td>{formatNumber(cases)}</td>\n              </tr>\n              <tr>\n                <th>Deaths total</th>\n                <td>\n                  {formatNumber(deaths)} ({((deaths / cases) * 100).toFixed(2)}%)\n                </td>\n              </tr>\n              <tr>\n                <th>Recovered total</th>\n                <td>{formatNumber(recovered)}</td>\n              </tr>\n              <tr>\n                <th>Cases today</th>\n                <td>{formatNumber(todayCases)}</td>\n              </tr>\n              <tr>\n                <th>Deaths today</th>\n                <td>{formatNumber(todayDeaths)}</td>\n              </tr>\n              <tr>\n                <th>Recovered today</th>\n                <td>{formatNumber(todayRecovered)}</td>\n              </tr>\n              <tr>\n                <th>Critical</th>\n                <td>{formatNumber(critical)}</td>\n              </tr>\n            </tbody>\n          </Table>\n        </Col>\n        <Col md={6}>\n          <Chart\n            options={{\n              labels: ['Cases', 'Deaths', 'Recovered'],\n              colors: ['var(--bs-blue)', 'var(--bs-red)', 'var(--bs-green)'],\n              tooltip: {\n                y: {\n                  formatter: (val) => formatNumber(val),\n                },\n              },\n            }}\n            series={[cases, deaths, recovered]}\n            type=\"donut\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default CovidDetail;\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CovidList from '../components/covid19/CovidList';\nimport CovidDetail from '../components/covid19/CovidDetail';\n\nconst Covid19: FC = () => {\n  const { country } = useParams();\n\n  return !country ? <CovidList /> : <CovidDetail country={country} />;\n};\n\nexport default Covid19;\n","import { useEffect, useState, Dispatch, SetStateAction } from 'react';\nimport useSWR from 'swr';\nimport {\n  CryptoApiStatusEnum,\n  CryptoListDataModel,\n  CryptoListModel,\n  CryptoHistoryDataModel,\n  CryptoHistoryModel,\n} from '../models/crypto';\nimport { fetcher } from '../utils';\nimport config from '../config';\n\nconst {\n  features: {\n    charts: { timeframes },\n    crypto: { endpoint },\n  },\n} = config;\n\n// TODO: change when swr properly types error response\ntype Error = any;\n\nexport const useCryptoList = (): [\n  CryptoListDataModel[] | undefined,\n  Dispatch<SetStateAction<CryptoListDataModel[] | undefined>>,\n  Error,\n] => {\n  const [cryptoList, setCryptoList] = useState<CryptoListDataModel[] | undefined>();\n  const [responseError, setResponseError] = useState(false);\n  const { data, error } = useSWR<CryptoListModel>(`${endpoint}/top/mktcapfull?limit=100&tsym=USD`, fetcher, {\n    revalidateOnFocus: false,\n  });\n\n  useEffect(() => {\n    if (data) {\n      const { Message, Data } = data;\n      Message === CryptoApiStatusEnum.Success ? setCryptoList(Data) : setResponseError(true);\n    }\n  }, [data]);\n\n  return [cryptoList, setCryptoList, error || responseError];\n};\n\ntype Timeframe = {\n  title: string;\n  limit: number;\n  aggregate: number;\n};\n\ntype ChartSeries = any[] | undefined;\n\ntype CryptoHistory = CryptoHistoryDataModel[] | undefined;\n\nexport const useCryptoHistory = (\n  cryptoCode: string,\n): [CryptoHistory, ChartSeries, Timeframe, Dispatch<SetStateAction<Timeframe>>, Error] => {\n  const [cryptoHistory, setCryptoHistory] = useState<CryptoHistory>(undefined);\n  const [timeframe, setTimeframe] = useState<Timeframe>(timeframes[0]);\n  const [chartSeries, setChartSeries] = useState<ChartSeries>();\n  const [responseError, setResponseError] = useState(false);\n  const { data, error } = useSWR<CryptoHistoryModel>(\n    `${endpoint}/histoday?fsym=${cryptoCode}&tsym=USD&limit=${timeframe.limit}&aggregate=${timeframe.aggregate}&allData=false`,\n    fetcher,\n  );\n\n  useEffect(() => {\n    if (data) {\n      const { Response, Data } = data;\n\n      if (Response === CryptoApiStatusEnum.Success) {\n        setCryptoHistory(Data);\n        setChartSeries([\n          {\n            data: Data.map(({ time, open, high, low, close }) => {\n              return {\n                x: time * 1000,\n                y: [open, high, low, close],\n              };\n            }),\n          },\n        ]);\n        return;\n      }\n\n      setResponseError(true);\n    }\n  }, [data]);\n\n  return [cryptoHistory, chartSeries, timeframe, setTimeframe, error || responseError];\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\n\ninterface PageHeadingProps {\n  amount: number;\n  toFixed?: number;\n}\n\nconst Percent: FC<PageHeadingProps> = ({ amount, toFixed = 2 }) => {\n  const pctClassName = classNames({\n    'text-danger': amount < 0,\n    'text-success': amount > 0,\n  });\n\n  return <span className={pctClassName}>{amount.toFixed(toFixed)}%</span>;\n};\n\nexport default Percent;\n","import { FC, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Alert, Spinner, Form, Table } from 'react-bootstrap';\nimport { useCryptoList } from '../../hooks/crypto';\nimport {\n  arrSortAscByKey,\n  arrSortDescByKey,\n  arrSortStringAscByKey,\n  arrSortStringDescByKey,\n  formatPrice,\n} from '../../utils';\nimport PageMeta from '../shared/PageMeta';\nimport PageHeading from '../shared/PageHeading';\nimport TableHeadingSort from '../shared/TableHeadingSort';\nimport Percent from '../shared/Percent';\n\nconst CryptoList: FC = () => {\n  const [cryptoList, setCryptoList, error] = useCryptoList();\n  const [search, setSearch] = useState('');\n  const title = 'Crypto';\n\n  if (error)\n    return (\n      <Alert variant=\"danger\" className=\"my-5\">\n        Something went wrong\n      </Alert>\n    );\n\n  if (!cryptoList) return <Spinner animation=\"border\" className=\"my-5\" />;\n\n  const tableHeadings = [\n    { title: 'Code', key: 'CoinInfo.Name', sortByString: true },\n    { title: 'Name', key: 'CoinInfo.FullName', sortByString: true },\n    { title: 'Price', key: 'RAW.USD.PRICE' },\n    { title: '24h %', key: 'RAW.USD.CHANGEPCT24HOUR' },\n    { title: 'Market Cap', key: 'RAW.USD.MKTCAP' },\n  ];\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <PageHeading title={title} />\n      <Form.Control\n        size=\"lg\"\n        type=\"search\"\n        placeholder=\"Search by currency...\"\n        className=\"mb-4\"\n        onChange={(e) => setSearch(e.target.value)}\n      />\n      <Table responsive striped bordered hover>\n        <thead>\n          <tr>\n            {tableHeadings.map(({ title, key, sortByString }) => (\n              <TableHeadingSort\n                key={key}\n                title={title}\n                onAsc={() =>\n                  setCryptoList([\n                    ...(sortByString ? arrSortStringAscByKey(cryptoList, key) : arrSortAscByKey(cryptoList, key)),\n                  ])\n                }\n                onDesc={() =>\n                  setCryptoList([\n                    ...(sortByString ? arrSortStringDescByKey(cryptoList, key) : arrSortDescByKey(cryptoList, key)),\n                  ])\n                }\n              />\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {cryptoList\n            .filter(({ CoinInfo: { FullName } }) => FullName.toLowerCase().includes(search.toLowerCase()))\n            .map(({ CoinInfo: { Name: code, ImageUrl: image, FullName: name }, RAW }) => {\n              if (!RAW?.USD) return null;\n              const { MKTCAP: marketCap, PRICE: price, CHANGEPCT24HOUR: changePct24h } = RAW.USD;\n\n              return (\n                <tr key={code}>\n                  <td>\n                    <img\n                      loading=\"lazy\"\n                      alt={name}\n                      src={`https://www.cryptocompare.com/${image}`}\n                      style={{ width: '1.3rem' }}\n                      className=\"me-2\"\n                    />\n                    {code}\n                  </td>\n                  <td>\n                    <Link to={code.toLowerCase()}>{name}</Link>\n                  </td>\n                  <td>{formatPrice(price)}</td>\n                  <td>\n                    <Percent amount={changePct24h} />\n                  </td>\n                  <td>{marketCap ? formatPrice(marketCap) : '-'}</td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default CryptoList;\n","import { FC } from 'react';\nimport { Alert, Spinner, ButtonGroup, Button } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport { useCryptoList, useCryptoHistory } from '../../hooks/crypto';\nimport { formatPrice } from '../../utils';\nimport config from '../../config';\nimport PageMeta from '../shared/PageMeta';\nimport PageHeading from '../shared/PageHeading';\nimport Percent from '../shared/Percent';\n\ninterface CryptoDetailProps {\n  code: string;\n}\n\nconst CryptoDetail: FC<CryptoDetailProps> = ({ code }) => {\n  const cryptoCode = code.toUpperCase();\n  const {\n    features: {\n      charts: { timeframes },\n    },\n  } = config;\n\n  const [cryptoList, , cryptoListError] = useCryptoList();\n  const [cryptoHistory, chartSeries, timeframe, setTimeframe, cryptoHistoryError] = useCryptoHistory(cryptoCode);\n  const error = cryptoListError || cryptoHistoryError;\n  const loading = !cryptoList || !cryptoHistory || !chartSeries;\n\n  if (error)\n    return (\n      <Alert variant=\"danger\" className=\"my-5\">\n        Something went wrong\n      </Alert>\n    );\n\n  if (loading) return <Spinner animation=\"border\" className=\"my-5\" />;\n\n  const cryptoDetailData = cryptoList.find((item) => item.CoinInfo.Name === cryptoCode);\n\n  if (!cryptoDetailData) return <Alert variant=\"warning\">Not found</Alert>;\n\n  const {\n    CoinInfo: { FullName: name, ImageUrl: image },\n  } = cryptoDetailData;\n  const { PRICE: price, CHANGEPCT24HOUR: changePct24h } = cryptoDetailData.RAW.USD;\n\n  return (\n    <>\n      <PageMeta title={name} />\n      <PageHeading title={name} />\n      <div className=\"mb-5\">\n        <div className=\"d-flex align-items-center fs-2\">\n          <img loading=\"lazy\" alt={name} src={`https://www.cryptocompare.com/${image}`} style={{ width: '4rem' }} />\n          <strong className=\"mx-4\">{formatPrice(price)}</strong>\n          <Percent amount={changePct24h} />\n        </div>\n      </div>\n      <ButtonGroup aria-label=\"Timeframe\" className=\"mb-5\">\n        {timeframes.map((item) => (\n          <Button\n            key={item.title}\n            variant={item === timeframe ? 'primary' : 'secondary'}\n            onClick={() => {\n              setTimeframe(item);\n            }}\n          >\n            {item.title}\n          </Button>\n        ))}\n      </ButtonGroup>\n      <Chart\n        options={{\n          chart: {\n            type: 'candlestick',\n            animations: {\n              enabled: false,\n            },\n            toolbar: {\n              tools: {\n                zoom: false,\n                zoomin: false,\n                zoomout: false,\n                selection: false,\n                pan: false,\n                reset: false,\n              },\n            },\n          },\n          title: {\n            text: `${cryptoCode} / USD Price Chart`,\n            align: 'left',\n          },\n          xaxis: {\n            type: 'datetime',\n          },\n          yaxis: {\n            tooltip: {\n              enabled: true,\n            },\n          },\n        }}\n        series={chartSeries}\n        type=\"candlestick\"\n        height={350}\n      />\n    </>\n  );\n};\n\nexport default CryptoDetail;\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CryptoList from '../components/crypto/CryptoList';\nimport CryptoDetail from '../components/crypto/CryptoDetail';\n\nconst Crypto: FC = () => {\n  const { code } = useParams();\n\n  return !code ? <CryptoList /> : <CryptoDetail code={code} />;\n};\n\nexport default Crypto;\n","import { FC, useState, Suspense, lazy } from 'react';\nimport { Button, Spinner, Row, Col, Card } from 'react-bootstrap';\nimport PageMeta from '../components/shared/PageMeta';\nimport PageHeading from '../components/shared/PageHeading';\nimport Socials from '../components/shared/Socials';\nconst ContactDetails = lazy(() => import('../components/ContactDetails'));\n\nconst Contact: FC = () => {\n  const [contact, setContact] = useState(false);\n  const content = contact ? (\n    <ContactDetails />\n  ) : (\n    <Button className=\"mt-2 mb-4\" size=\"lg\" onClick={() => setContact(true)}>\n      Show contact information\n    </Button>\n  );\n  const title = 'Contact';\n\n  return (\n    <>\n      <PageMeta title={title} />\n      <PageHeading title={title} />\n      <Row>\n        <Col md={6}>\n          <Card>\n            <Card.Header>Contact information</Card.Header>\n            <Card.Body>\n              <Suspense fallback={<Spinner animation=\"border\" />}>{content}</Suspense>\n              <Socials variant=\"content\" color=\"var(--bs-blue)\" />\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Contact;\n","import { FC } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Home from './views/Home';\nimport Experience from './views/Experience';\nimport Projects from './views/Projects';\nimport Covid19 from './views/Covid19';\nimport Crypto from './views/Crypto';\nimport Contact from './views/Contact';\n\nconst App: FC = () => {\n  return (\n    <Router>\n      <Header />\n      <Container className=\"pb-5\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/experience\" element={<Experience />} />\n          <Route path=\"/projects\" element={<Projects />} />\n          <Route path=\"/features/covid-19\" element={<Covid19 />} />\n          <Route path=\"/features/covid-19/:country\" element={<Covid19 />} />\n          <Route path=\"/features/crypto\" element={<Crypto />} />\n          <Route path=\"/features/crypto/:code\" element={<Crypto />} />\n          <Route path=\"/contact\" element={<Contact />} />\n        </Routes>\n      </Container>\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}